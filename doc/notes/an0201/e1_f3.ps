%!PS-Adobe-2.0 EPSF-2.0
%%Title: e1_f3.fig
%%Creator: /u/31/31/opt/bin/fig2dev Version 3.2 Patchlevel 0-beta2
%%CreationDate: Thu Apr 11 14:33:39 2002
%%For: s.degraaf@tudelft.nl (Simon de Graaf)
%%Orientation: Portrait
%%BoundingBox: 0 0 669 687
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.00
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-49.0 737.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 12316 m 0 0 l 12005 0 l 12005 12316 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1800 3300 m 3000 900 l gs col-1 s gr 
% Polyline
n 1800 900 m 3000 3300 l gs col-1 s gr 
% Polyline
gs  clippath
2697 2130 m 2577 2100 l 2697 2070 l 2535 2070 l 2535 2130 l cp
clip
n 2550 2100 m 3600 2100 l gs col-1 s gr gr

% arrowhead
n 2697 2130 m 2577 2100 l 2697 2070 l  col-1 s
% Polyline
n 1425 900 m 1725 900 l gs col-1 s gr 
% Polyline
n 1425 3300 m 1725 3300 l gs col-1 s gr 
% Polyline
n 1800 3375 m 1800 3675 l gs col-1 s gr 
% Polyline
n 3000 3375 m 3000 3675 l gs col-1 s gr 
% Polyline
gs  clippath
2370 2547 m 2400 2427 l 2430 2547 l 2430 2385 l 2370 2385 l cp
clip
n 2400 2400 m 2400 4200 l gs col-1 s gr gr

% arrowhead
n 2370 2547 m 2400 2427 l 2430 2547 l  col-1 s
% Polyline
n 7875 1500 m 8250 1500 l gs col-1 s gr 
% Polyline
n 5100 3300 m 8100 3300 l gs col-1 s gr 
% Polyline
n 6600 1800 m 8175 1800 l gs col-1 s gr 
% Polyline
n 5100 1800 m 6600 1800 l gs col-1 s gr 
% Polyline
n 2400 9000 m 6000 9000 l 6000 7800 l 2400 7800 l cp gs col-1 s gr 
% Polyline
n 6000 9000 m 10500 5400 l gs col-1 s gr 
% Polyline
n 5991 7788 m 10500 4200 l gs col-1 s gr 
% Polyline
n 2466 7788 m 6900 4200 l gs col-1 s gr 
% Polyline
 [60] 0 sd
n 2400 9000 m 6900 5400 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6900 4200 m 6900 5400 l 10500 5400 l gs col-1 s gr  [] 0 sd
% Polyline
n 6900 4200 m 10500 4200 l 10500 5400 l gs col-1 s gr 
% Polyline
 [60] 0 sd
n 6900 5400 m 10500 4200 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 10500 5400 m 6900 4200 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 9000 m 6900 4200 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 7800 m 6900 5400 l gs col-1 s gr  [] 0 sd
% Polyline
n 2400 9000 m 6000 7800 l gs col-1 s gr 
% Polyline
n 6000 9000 m 2400 7800 l gs col-1 s gr 
% Polyline
n 6000 9000 m 10500 4200 l gs col-1 s gr 
% Polyline
n 10500 5400 m 6000 7800 l gs col-1 s gr 
% Polyline
n 6000 7800 m 6900 4200 l gs col-1 s gr 
% Polyline
n 2400 7800 m 10500 4200 l gs col-1 s gr 
% Polyline
n 6375 6075 m 6525 6075 l 6525 5925 l 6375 5925 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 425.00 395.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 4575 6675 m 4725 6675 l 4725 6525 l 4575 6525 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 305.00 435.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 4125 8475 m 4275 8475 l 4275 8325 l 4125 8325 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 275.00 555.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 8175 6675 m 8325 6675 l 8325 6525 l 8175 6525 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 545.00 435.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 8625 4875 m 8775 4875 l 8775 4725 l 8625 4725 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 575.00 315.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 8250 6600 m 8250 7200 l gs col-1 s gr 
% Polyline
gs  clippath
6147 9030 m 6027 9000 l 6147 8970 l 5985 8970 l 5985 9030 l cp
clip
n 6000 9000 m 7350 9000 l gs col-1 s gr gr

% arrowhead
n 6147 9030 m 6027 9000 l 6147 8970 l  col-1 s
% Polyline
gs  clippath
8472 7230 m 8352 7200 l 8472 7170 l 8310 7170 l 8310 7230 l cp
clip
n 8325 7200 m 9675 7200 l gs col-1 s gr gr

% arrowhead
n 8472 7230 m 8352 7200 l 8472 7170 l  col-1 s
% Polyline
gs  clippath
10722 5430 m 10602 5400 l 10722 5370 l 10560 5370 l 10560 5430 l cp
clip
n 10575 5400 m 11925 5400 l gs col-1 s gr gr

% arrowhead
n 10722 5430 m 10602 5400 l 10722 5370 l  col-1 s
% Polyline
gs  clippath
4064 9064 m 4178 9016 l 4100 9112 l 4230 9015 l 4194 8967 l cp
clip
n 3600 9450 m 4200 9000 l gs col-1 s gr gr

% arrowhead
n 4064 9064 m 4178 9016 l 4100 9112 l  col-1 s
% Polyline
gs  clippath
5822 9110 m 5932 9054 l 5861 9156 l 5984 9050 l 5945 9004 l cp
clip
n 5475 9450 m 5953 9037 l gs col-1 s gr gr

% arrowhead
n 5822 9110 m 5932 9054 l 5861 9156 l  col-1 s
% Polyline
gs  clippath
2217 9101 m 2331 9053 l 2253 9149 l 2383 9052 l 2347 9004 l cp
clip
n 1800 9450 m 2353 9037 l gs col-1 s gr gr

% arrowhead
n 2217 9101 m 2331 9053 l 2253 9149 l  col-1 s
% Polyline
n 4200 8400 m 4200 9000 l gs col-1 s gr 
% Polyline
gs  clippath
2178 7770 m 2298 7800 l 2178 7830 l 2340 7830 l 2340 7770 l cp
clip
n 1500 7800 m 2325 7800 l gs col-1 s gr gr

% arrowhead
n 2178 7770 m 2298 7800 l 2178 7830 l  col-1 s
% Polyline
gs  clippath
2178 8370 m 2298 8400 l 2178 8430 l 2340 8430 l 2340 8370 l cp
clip
n 1500 8400 m 2325 8400 l gs col-1 s gr gr

% arrowhead
n 2178 8370 m 2298 8400 l 2178 8430 l  col-1 s
% Polyline
gs  clippath
2103 8970 m 2223 9000 l 2103 9030 l 2265 9030 l 2265 8970 l cp
clip
n 1500 9000 m 2250 9000 l gs col-1 s gr gr

% arrowhead
n 2103 8970 m 2223 9000 l 2103 9030 l  col-1 s
% Polyline
15.000 slw
gs  clippath
8565 5143 m 8685 4927 l 8681 5174 l 8766 4862 l 8650 4830 l cp
clip
n 8234 6596 m 8700 4875 l gs col-1 s gr gr

% arrowhead
n 8565 5143 m 8685 4927 l 8681 5174 l  col-1 s
% Polyline
gs  clippath
6856 6157 m 6650 6018 l 6897 6044 l 6592 5933 l 6551 6046 l cp
clip
n 8250 6600 m 6600 6000 l gs col-1 s gr gr

% arrowhead
n 6856 6157 m 6650 6018 l 6897 6044 l  col-1 s
% Polyline
7.500 slw
n 6600 1500 m 7800 1500 l 7800 2100 l 6600 2100 l cp gs col-1 s gr 
% Polyline
n 7875 2100 m 8250 2100 l gs col-1 s gr 
% Polyline
n 2400 9000 m 2400 10200 l 6000 10200 l 6000 9000 l gs col-1 s gr 
% Polyline
n 6000 10200 m 10500 6600 l 10500 5400 l gs col-1 s gr 
% Polyline
 [60] 0 sd
n 6900 5400 m 6900 6600 l 10500 6600 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 10200 m 6900 6600 l gs col-1 s gr  [] 0 sd
% Polyline
n 1800 3300 m 3000 3300 l 3000 900 l 1800 900 l cp gs col-1 s gr 
% Polyline
 [60] 0 sd
n 2397 10193 m 10497 6593 l gs col-1 s gr  [] 0 sd
/Times-Roman ff 300.00 scf sf
6300 12225 m
gs 1 -1 sc (E-E  ... etc. 10x10 = 100 green values) col-1 sh gr
% Polyline
 [60] 0 sd
n 6882 6596 m 5982 10196 l gs col-1 s gr  [] 0 sd
% Polyline
n 6010 10209 m 10510 5409 l gs col-1 s gr 
% Polyline
n 10502 6604 m 6002 9004 l gs col-1 s gr 
% Polyline
n 8250 7800 m 8400 7800 l 8400 7650 l 8250 7650 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 550.00 510.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
 [60] 0 sd
n 6900 6600 m 10500 5400 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 10567 6622 m 6967 5422 l gs col-1 s gr  [] 0 sd
% Polyline
n 8625 6075 m 8775 6075 l 8775 5925 l 8625 5925 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 575.00 395.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 2407 10222 m 6007 9022 l gs col-1 s gr 
% Polyline
n 6000 10200 m 2400 9000 l gs col-1 s gr 
% Polyline
n 4125 9675 m 4275 9675 l 4275 9525 l 4125 9525 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 275.00 635.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 6375 8475 m 6525 8475 l 6525 8325 l 6375 8325 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 425.00 555.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
 [60] 0 sd
n 2465 8981 m 6965 6581 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2410 10209 m 6910 5409 l gs col-1 s gr  [] 0 sd
% Polyline
n 4575 7875 m 4725 7875 l 4725 7725 l 4575 7725 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 305.00 515.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
15.000 slw
gs  clippath
8309 7281 m 8248 7521 l 8189 7281 l 8188 7605 l 8308 7605 l cp
clip
n 8250 6582 m 8248 7575 l gs col-1 s gr gr

% arrowhead
n 8309 7281 m 8248 7521 l 8189 7281 l  col-1 s
% Polyline
7.500 slw
gs  clippath
2103 10170 m 2223 10200 l 2103 10230 l 2265 10230 l 2265 10170 l cp
clip
n 1500 10200 m 2250 10200 l gs col-1 s gr gr

% arrowhead
n 2103 10170 m 2223 10200 l 2103 10230 l  col-1 s
/Times-Roman ff 240.00 scf sf
3450 2010 m
gs 1 -1 sc (1200) col-1 sh gr
/Times-Roman ff 240.00 scf sf
1725 3945 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 240.00 scf sf
825 975 m
gs 1 -1 sc (2400) col-1 sh gr
/Times-Roman ff 240.00 scf sf
1125 3345 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 240.00 scf sf
2925 3960 m
gs 1 -1 sc (1200) col-1 sh gr
/Times-Roman ff 240.00 scf sf
2250 4530 m
gs 1 -1 sc (600) col-1 sh gr
/Times-Roman ff 240.00 scf sf
8325 1860 m
gs 1 -1 sc (100000 \(250*4*100\)) col-1 sh gr
/Times-Roman ff 240.00 scf sf
8325 1560 m
gs 1 -1 sc (100400) col-1 sh gr
/Times-Roman ff 240.00 scf sf
8325 3345 m
gs 1 -1 sc (0) col-1 sh gr
/Times-Roman ff 300.00 scf sf
5850 2625 m
gs 1 -1 sc (e1 = 3.9) col-1 sh gr
/Times-Roman ff 300.00 scf sf
5850 1050 m
gs 1 -1 sc (e2 = 0.001) col-1 sh gr
/Times-Roman ff 300.00 scf sf
10650 1875 m
gs 1 -1 sc (b1) col-1 sh gr
/Times-Roman ff 300.00 scf sf
6975 8925 m
gs 1 -1 sc (y = 0) col-1 sh gr
/Times-Roman ff 300.00 scf sf
9075 7125 m
gs 1 -1 sc (y = 1200) col-1 sh gr
/Times-Roman ff 300.00 scf sf
10950 5325 m
gs 1 -1 sc (y = 2400) col-1 sh gr
/Times-Roman ff 300.00 scf sf
1575 9600 m
gs 1 -1 sc (x = 0) col-1 sh gr
/Times-Roman ff 300.00 scf sf
3225 9600 m
gs 1 -1 sc (x = 600) col-1 sh gr
/Times-Roman ff 300.00 scf sf
5100 9600 m
gs 1 -1 sc (x = 1200) col-1 sh gr
/Times-Roman ff 300.00 scf sf
825 8925 m
gs 1 -1 sc (z = 100000) col-1 sh gr
/Times-Roman ff 300.00 scf sf
825 7725 m
gs 1 -1 sc (z = 100400) col-1 sh gr
/Times-Roman ff 300.00 scf sf
825 8325 m
gs 1 -1 sc (z = 100200) col-1 sh gr
/Times-Roman ff 300.00 scf sf
8400 6675 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Roman ff 240.00 scf sf
8400 2160 m
gs 1 -1 sc (99600) col-1 sh gr
/Times-Roman ff 300.00 scf sf
8475 7905 m
gs 1 -1 sc (B) col-1 sh gr
/Times-Roman ff 300.00 scf sf
6150 5985 m
gs 1 -1 sc (C) col-1 sh gr
/Times-Roman ff 300.00 scf sf
8625 4590 m
gs 1 -1 sc (D) col-1 sh gr
/Times-Roman ff 300.00 scf sf
4125 8220 m
gs 1 -1 sc (E) col-1 sh gr
/Times-Roman ff 300.00 scf sf
8625 5850 m
gs 1 -1 sc (F) col-1 sh gr
/Times-Roman ff 300.00 scf sf
4200 9420 m
gs 1 -1 sc (G) col-1 sh gr
/Times-Roman ff 300.00 scf sf
6225 8220 m
gs 1 -1 sc (H) col-1 sh gr
/Times-Roman ff 300.00 scf sf
4500 6420 m
gs 1 -1 sc (I) col-1 sh gr
/Times-Roman ff 300.00 scf sf
4650 7620 m
gs 1 -1 sc (J) col-1 sh gr
/Times-Roman ff 300.00 scf sf
975 10050 m
gs 1 -1 sc (z = 99600) col-1 sh gr
/Times-Roman ff 300.00 scf sf
3525 11025 m
gs 1 -1 sc (A-A A-B A-C A-D A-E A-F A-G A-H A-I A-J) col-1 sh gr
/Times-Roman ff 300.00 scf sf
4275 11325 m
gs 1 -1 sc (B-B B-C B-D B-E B-F B-G B-H B-I B-J) col-1 sh gr
/Times-Roman ff 300.00 scf sf
4875 11625 m
gs 1 -1 sc (C-C C-D C-E C-F C-G C-H C-I C-J) col-1 sh gr
/Times-Roman ff 300.00 scf sf
5475 11925 m
gs 1 -1 sc (D-D D-E D-F D-G D-H D-I D-J) col-1 sh gr
$F2psEnd
rs
end
