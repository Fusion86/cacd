#FIG 3.1
Portrait
Center
Inches
1200 2
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 4
	0 0 1.00 60.00 120.00
	 1875 4200 1875 4350 4350 4350 4350 5625
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 3
	0 0 1.00 60.00 120.00
	 2550 5400 3525 5400 3525 5625
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 3
	0 0 1.00 60.00 120.00
	 2550 5775 3000 5775 3000 6375
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 3
	0 0 1.00 60.00 120.00
	 3300 4800 4050 4800 4050 5625
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 2
	0 0 1.00 60.00 120.00
	 4050 5925 4050 6225
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 2
	0 0 1.00 60.00 120.00
	 2025 6600 2025 7350
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 3
	0 0 1.00 60.00 120.00
	 900 7425 900 7725 1650 7725
4 0 -1 0 0 0 12 0.0000 4 90 345 375 300 scan\001
4 0 -1 0 0 0 12 0.0000 4 135 1095 1350 300 <scan/scan.c>\001
4 0 -1 0 0 0 12 0.0000 4 135 1155 675 675 head = initScan\001
4 0 -1 0 0 0 12 0.0000 4 180 1650 675 1050 newEdge = fetchEdge\001
4 0 -1 0 0 0 12 0.0000 4 135 1650 675 1275 newTerm = fetchTerm\001
4 0 -1 0 0 0 12 0.0000 4 180 1005 900 1875 if (doTileXY)\001
4 0 -1 0 0 0 12 0.0000 4 180 1800 1050 2100 if (peekTileXY < thisX)\001
4 0 -1 0 0 0 12 0.0000 4 180 2850 1275 2325 while (edge -> yr < INF) testTileXY\001
4 0 -1 0 0 0 12 0.0000 4 180 75 900 3450 [\001
4 0 -1 0 0 0 12 0.0000 4 180 75 600 1875 [\001
4 0 -1 0 0 0 12 0.0000 4 180 1530 600 1650 while (thisX < INF)\001
4 0 -1 0 0 0 12 0.0000 4 180 1515 900 2700 edge = head -> fwd\001
4 0 -1 0 0 0 12 0.0000 4 180 3630 900 3000 while (edge -> yr < INF || new -> xl == thisX)\001
4 0 -1 0 0 0 12 0.0000 4 180 1155 1125 3300 if (smallerAtX)\001
4 0 -1 0 0 0 12 0.0000 4 180 1320 1125 3600 while (equalAtX)\001
4 0 -1 0 0 0 12 0.0000 4 180 2235 2475 3600 bundle; newEdge = fetchEdge\001
4 0 -1 0 0 0 12 0.0000 4 180 2175 2475 3300 insert; newEdge = fetchEdge\001
4 0 -1 0 0 0 12 0.0000 4 180 2955 1125 3900 while (newTerm -> x == thisX && ...)\001
4 0 -1 0 0 0 12 0.0000 4 165 990 1425 4125 tileAddTerm;\001
4 0 -1 0 0 0 12 0.0000 4 135 1650 2475 4125 newTerm = fetchTerm\001
4 0 -1 0 0 0 12 0.0000 4 180 1830 1125 4650 if (edge -> xr == thisX)\001
4 0 -1 0 0 0 12 0.0000 4 180 1875 1425 4875 tileDeleteEdge; delete_e\001
4 0 -1 0 0 0 12 0.0000 4 180 2175 1125 5175 else if (edge -> xl == thisX)\001
4 0 -1 0 0 0 12 0.0000 4 180 1080 1425 5475 tileInsertEdge\001
4 0 -1 0 0 0 12 0.0000 4 180 1080 1425 5850 tileCrossEdge\001
4 0 -1 0 0 0 12 0.0000 4 180 1200 3375 5850 if (!ft) BR; ft=; *\001
4 0 -1 0 0 0 12 0.0000 4 165 390 3375 6075 TL; *\001
4 0 -1 0 0 0 12 0.0000 4 165 855 3750 6450 TR; BR; ft=\001
4 0 -1 0 0 0 12 0.0000 4 180 960 2850 6675 if (ft) TR; TL\001
4 0 -1 0 0 0 12 0.0000 4 180 1560 2850 6900 if (!= color) BR; ft=;*\001
4 0 -1 0 0 0 12 0.0000 4 180 1515 1125 6150 edge = edge -> fwd\001
4 0 -1 0 0 0 12 0.0000 4 180 75 900 6300 ]\001
4 0 -1 0 0 0 12 0.0000 4 135 1260 900 6525 tileAdvanceScan\001
4 0 -1 0 0 0 12 0.0000 4 180 75 600 6675 ]\001
4 0 -1 0 0 0 12 0.0000 4 180 945 600 7350 tileStopScan\001
4 0 -1 0 0 0 12 0.0000 4 135 1155 600 7050 advanceTileXY\001
4 0 -1 0 0 0 12 0.0000 4 180 660 1725 7575 if (ft) TR\001
4 0 -1 0 0 0 12 0.0000 4 135 315 1125 5625 else\001
4 0 -1 0 0 0 12 0.0000 4 180 1590 1725 7800 while(back) clearTile\001
4 0 -1 0 0 0 12 0.0000 4 180 960 3450 7350 *) createTile\001
4 0 -1 0 0 0 12 0.0000 4 165 2550 300 8475 BR: tile -> xr = xr; tile -> br = br\001
4 0 -1 0 0 0 12 0.0000 4 180 4245 525 8625 if (t_bot && t_bot -> xl < xr) enumPair (t_bot, tile, 'h')\001
4 0 -1 0 0 0 12 0.0000 4 165 1320 300 8250 TL: tile -> tl = tl;\001
4 0 -1 0 0 0 12 0.0000 4 180 2640 1650 8250 if (t_left) enumPair (t_left, tile, 'v')\001
4 0 -1 0 0 0 12 0.0000 4 135 1320 300 8850 TR: tile -> tr = tr\001
4 0 -1 0 0 0 12 0.0000 4 180 4035 525 9000 if (t_top -> xl < tile -> xr) enumPair (tile, t_top, 'h')\001
4 0 -1 0 0 0 12 0.0000 4 180 3000 525 9675 if(bandWidth) inject(tile); else clearTile\001
4 0 -1 0 0 0 12 0.0000 4 180 1125 525 9450 enumTile (tile)\001
4 0 -1 0 0 0 12 0.0000 4 180 2025 525 9225 enumPair (tile, t_right, 'v')\001
