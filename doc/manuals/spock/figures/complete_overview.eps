%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8
%%For: (X B) (**)
%%Title: (complete_overview.eps)
%%CreationDate: (12/22/2000) (11:51 AM)
%%BoundingBox: 0 0 465 577
%%HiResBoundingBox: 0.7 0.9399 464.8999 576.26
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Helvetica-Bold
%%DocumentNeededFonts: Helvetica
%%+ Helvetica-Bold
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 233.5 288.5 233.5 288.5
%AI3_TileBox: 0 0 576 786
%AI3_DocumentPreview: Header
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -429.9658 798.5447 0.9386 1272 906 18 0 1 8 65 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%%AI3_PaperRect:-10 833 585 -9
%%AI3_Margin:10 -46 -9 9
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Bold
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
uu0 O
0 0 0 0 k
0 R
0 0 0 1 K
800 Ar
0 J 1 j 1 w 4 M []0 d%AI3_Note:0 D
1 XR
252.96 468.96 m
257.52 473.52 L
254.6401 473.52 L
254.6401 508.3198 L
251.52 508.3198 L
251.52 473.52 L
248.6401 473.52 L
252.96 468.96 L
BUu156.2402 156.96 m
160.7998 161.52 L
157.9199 161.52 L
157.9199 237.6001 L
154.7998 237.6001 L
154.7998 161.52 L
151.6802 161.52 L
156.2402 156.96 L
BUu349.6802 129.6001 m
354 133.9199 L
351.1201 133.9199 L
351.1201 237.6001 L
348 237.6001 L
348 133.9199 L
345.1201 133.9199 L
349.6802 129.6001 L
BUu0 0 0 0.098 k
288.7202 381.3599 m
291.6001 381.8398 L
294 383.04 L
296.1602 384.96 L
297.3599 387.6001 L
297.8398 390.2402 L
297.8398 460.0801 L
297.3599 462.96 L
296.1602 465.3599 L
294 467.2798 L
291.6001 468.7202 L
288.7202 468.96 L
216.96 468.96 L
214.3198 468.7202 L
211.6802 467.2798 L
209.7598 465.3599 L
208.5601 462.96 L
208.0801 460.0801 L
208.0801 390.2402 L
208.5601 387.6001 L
209.7598 384.96 L
211.6802 383.04 L
214.3198 381.8398 L
216.96 381.3599 L
288.7202 381.3599 L
BU0 To
1 0 0 1 240.96 457.9199 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j%_ 0 50 XQ
/_Helvetica-Bold 7.5 7.2149 -1.71 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
240 Tg
0 0 Tl
0 Tc
0 Tw
(P) Tx 1 30 Tk
(ar) Tx 1 15 Tk
(ser) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 j277.9199 436.3198 m
279.8398 436.7998 L
281.7598 437.7598 L
283.2002 439.2002 L
284.1602 441.1201 L
284.6401 443.2798 L
284.1602 445.2002 L
283.2002 447.1201 L
281.7598 448.5601 L
279.8398 449.52 L
277.9199 450 L
228.2402 450 L
226.3198 449.52 L
224.3999 448.5601 L
222.7202 447.1201 L
221.7598 445.2002 L
221.52 443.2798 L
221.7598 441.1201 L
222.7202 439.2002 L
224.3999 437.7598 L
226.3198 436.7998 L
228.2402 436.3198 L
277.9199 436.3198 L
BU0 To
1 0 0 1 227.52 440.8799 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j/_Helvetica 7.5 6.9825 -1.6874 Tf
(le) Tx 1 30 Tk
(xical analyz) Tx 1 15 Tk
(er) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 j277.9199 411.6001 m
279.8398 412.0801 L
281.7598 413.04 L
283.2002 414.48 L
284.1602 416.3999 L
284.6401 418.3198 L
284.1602 420.48 L
283.2002 422.3999 L
281.7598 423.8398 L
279.8398 424.7998 L
277.9199 425.2798 L
228.2402 425.2798 L
226.3198 424.7998 L
224.3999 423.8398 L
222.7202 422.3999 L
221.7598 420.48 L
221.52 418.3198 L
221.7598 416.3999 L
222.7202 414.48 L
224.3999 413.04 L
226.3198 412.0801 L
228.2402 411.6001 L
277.9199 411.6001 L
BU0 To
1 0 0 1 225.8398 415.9199 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j(g) Tx 1 10 Tk
(r) Tx 1 10 Tk
(ammar parser) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 j277.9199 384.7202 m
279.8398 384.96 L
281.7598 385.9199 L
283.2002 387.3599 L
284.1602 389.2798 L
284.6401 391.4399 L
284.1602 393.6001 L
283.2002 395.2798 L
281.7598 396.96 L
279.8398 397.9199 L
277.9199 398.1602 L
228.2402 398.1602 L
226.3198 397.9199 L
224.3999 396.96 L
222.7202 395.2798 L
221.7598 393.6001 L
221.52 391.4399 L
221.7598 389.2798 L
222.7202 387.3599 L
224.3999 385.9199 L
226.3198 384.96 L
228.2402 384.7202 L
277.9199 384.7202 L
BU0 To
1 0 0 1 238.7998 389.04 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j(CP) Tx 1 40 Tk
(arser) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 j252.96 398.1602 m
248.6401 402.7202 L
251.52 402.7202 L
251.52 407.2798 L
248.6401 407.2798 L
252.96 411.6001 L
257.52 407.2798 L
254.6401 407.2798 L
254.6401 402.7202 L
257.52 402.7202 L
252.96 398.1602 L
BUu252.96 425.2798 m
257.52 429.6001 L
254.6401 429.6001 L
254.6401 436.3198 L
251.52 436.3198 L
251.52 429.6001 L
248.6401 429.6001 L
252.96 425.2798 L
BUu0 0 0 0.098 k
315.8398 508.3198 m
318.7202 508.5601 L
321.1201 510 L
323.04 511.9199 L
324.48 514.3201 L
324.7202 517.2 L
324.7202 566.6401 L
324.48 569.52 L
323.04 571.9199 L
321.1201 574.0801 L
318.7202 575.28 L
315.8398 575.76 L
190.0801 575.76 L
187.2002 575.28 L
184.7998 574.0801 L
182.8799 571.9199 L
181.4399 569.52 L
180.96 566.6401 L
180.96 517.2 L
181.4399 514.3201 L
182.8799 511.9199 L
184.7998 510 L
187.2002 508.5601 L
190.0801 508.3198 L
315.8398 508.3198 L
BU0 To
1 0 0 1 220.5601 564.48 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j/_Helvetica-Bold 7.5 7.2149 -1.71 Tf
(Configuration file) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 j232.7998 515.04 m
235.6802 515.28 L
238.0801 516.72 L
240 518.6401 L
241.4399 521.28 L
241.9199 523.9199 L
241.9199 541.9199 L
241.4399 544.8 L
240 547.2 L
238.0801 549.3599 L
235.6802 550.5601 L
232.7998 551.04 L
196.7998 551.04 L
193.9199 550.5601 L
191.52 549.3599 L
189.6001 547.2 L
188.1602 544.8 L
187.6802 541.9199 L
187.6802 523.9199 L
188.1602 521.28 L
189.6001 518.6401 L
191.52 516.72 L
193.9199 515.28 L
196.7998 515.04 L
232.7998 515.04 L
BU0 To
1 0 0 1 206.6401 540.24 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j/_Helvetica 7.5 6.9825 -1.6874 Tf
(User) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 200.1602 530.6401 0 Tp
0 Tv
TP
0 Tr
(interf) Tx 1 30 Tk
(ace) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 196.0801 521.04 0 Tp
0 Tv
TP
0 Tr
(descr) Tx 1 -15 Tk
(iption) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 j306.7202 515.04 m
309.6001 515.28 L
312 516.72 L
314.1602 518.6401 L
315.3599 521.28 L
315.8398 523.9199 L
315.8398 541.9199 L
315.3599 544.8 L
314.1602 547.2 L
312 549.3599 L
309.6001 550.5601 L
306.7202 551.04 L
270.96 551.04 L
268.3198 550.5601 L
265.6802 549.3599 L
263.7598 547.2 L
262.5601 544.8 L
262.0801 541.9199 L
262.0801 523.9199 L
262.5601 521.28 L
263.7598 518.6401 L
265.6802 516.72 L
268.3198 515.28 L
270.96 515.04 L
306.7202 515.04 L
BU0 To
1 0 0 1 271.9199 535.4399 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j(Gener) Tx 1 10 Tk
(ator) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 268.3198 525.8401 0 Tp
0 Tv
TP
0 Tr
(descr) Tx 1 -15 Tk
(iptions) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 j241.9199 533.04 m
246.2402 537.3599 L
246.2402 534.48 L
257.52 534.48 L
257.52 537.3599 L
262.0801 533.04 L
257.52 528.48 L
257.52 531.3599 L
246.2402 531.3599 L
246.2402 528.48 L
241.9199 533.04 L
BUu0 0 0 0.098 k
419.2798 237.6001 m
422.1602 238.0801 L
424.5601 239.2798 L
426.7202 241.2002 L
427.9199 243.8398 L
428.3999 246.48 L
428.3999 345.3599 L
427.9199 348 L
426.7202 350.6401 L
424.5601 352.5601 L
422.1602 353.7598 L
419.2798 354.2402 L
280.0801 354.2402 L
277.2002 353.7598 L
274.7998 352.5601 L
272.8799 350.6401 L
271.4399 348 L
270.96 345.3599 L
270.96 246.48 L
271.4399 243.8398 L
272.8799 241.2002 L
274.7998 239.2798 L
277.2002 238.0801 L
280.0801 237.6001 L
419.2798 237.6001 L
BU0 To
1 0 0 1 325.6802 343.2002 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j/_Helvetica-Bold 7.5 7.2149 -1.71 Tf
(CGenerator) Tx 1 15 Tk
(s) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 j405.8398 259.9199 m
408.7202 260.3999 L
411.1201 261.8398 L
413.04 263.7598 L
414.48 266.1602 L
414.7202 269.04 L
414.7202 327.3599 L
414.48 330 L
413.04 332.6401 L
411.1201 334.5601 L
408.7202 335.7598 L
405.8398 336.2402 L
315.8398 336.2402 L
312.96 335.7598 L
310.5601 334.5601 L
308.6401 332.6401 L
307.2002 330 L
306.7202 327.3599 L
306.7202 269.04 L
307.2002 266.1602 L
308.6401 263.7598 L
310.5601 261.8398 L
312.96 260.3999 L
315.8398 259.9199 L
405.8398 259.9199 L
BU0 To
1 0 0 1 312.96 325.2002 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 j/_Helvetica 7.5 6.9825 -1.6874 Tf
(CGener) Tx 1 10 Tk
(ator component with) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 347.2798 315.6001 0 Tp
0 Tv
TP
0 Tr
(children) Tx 1 0 Tk
(\r) TX 
TO
u0 R
0 0 0 1 K
1 J 1 j354 313.6802 m
354 304.7998 L
SUu354 304.7998 m
390 295.6802 L
390 291.3599 L
SUu354 304.7998 m
336 300.2402 L
336 291.3599 L
SUu354 304.7998 m
345.1201 302.6401 L
345.1201 291.3599 L
SUu354 304.7998 m
354 318.96 L
SUu354 304.7998 m
354 318.96 L
SUu354 304.7998 m
354 318.96 L
SUu390 291.3599 m
390 275.7598 L
SUu390 275.7598 m
405.8398 271.9199 L
405.8398 262.3198 L
SUu390 275.7598 m
372 271.2002 L
372 262.3198 L
SUu390 275.7598 m
381.1201 273.6001 L
381.1201 262.3198 L
SUu390 275.7598 m
390 289.6802 L
SUu390 275.7598 m
390 289.6802 L
SUu390 275.7598 m
390 289.6802 L
SUu336 291.3599 m
336 282.48 L
SUu336 282.48 m
336 271.2002 L
SUu336 282.48 m
318 277.9199 L
318 269.04 L
SUu336 282.48 m
336 287.04 L
SUu336 282.48 m
336 296.3999 L
SUu336 282.48 m
336 296.3999 L
SUu336 282.48 m
336 296.3999 L
SUu345.1201 291.3599 m
345.1201 282.48 L
SUu345.1201 282.48 m
360.7202 278.6401 L
360.7202 269.04 L
SUu345.1201 282.48 m
349.6802 281.52 L
349.6802 273.6001 L
SUu345.1201 282.48 m
360.7202 278.6401 L
360.7202 273.6001 L
SUu345.1201 282.48 m
345.8398 282.2402 L
345.8398 282.2402 L
SUu345.1201 282.48 m
345.1201 296.3999 L
SUu345.1201 282.48 m
345.1201 296.3999 L
SUu0 O
0 0 0 0 k
378.7202 244.3198 m
381.6001 244.7998 L
384 246 L
386.1602 247.9199 L
387.3599 250.5601 L
387.8398 253.2002 L
387.8398 311.52 L
387.3599 314.3999 L
386.1602 316.7998 L
384 318.7202 L
381.6001 320.1602 L
378.7202 320.6401 L
288.7202 320.6401 L
286.3198 320.1602 L
283.6802 318.7202 L
281.7598 316.7998 L
280.5601 314.3999 L
280.0801 311.52 L
280.0801 253.2002 L
280.5601 250.5601 L
281.7598 247.9199 L
283.6802 246 L
286.3198 244.7998 L
288.7202 244.3198 L
378.7202 244.3198 L
BU0 To
1 0 0 1 286.3198 309.3599 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(CGener) Tx 1 10 Tk
(atorComponent with) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 320.3999 299.7598 0 Tp
0 Tv
TP
0 Tr
(children) Tx 1 0 Tk
(\r) TX 
TO
u0 R
0 0 0 1 K
1 J 1 j324.7202 298.0801 m
324.7202 288.96 L
SUu324.7202 288.96 m
360.7202 280.3198 L
360.7202 275.7598 L
SUu324.7202 288.96 m
306.7202 284.8799 L
306.7202 275.7598 L
SUu324.7202 288.96 m
315.8398 287.04 L
315.8398 275.7598 L
SUu324.7202 288.7646 m
324.7202 297.3965 L
SUu360.7202 275.7598 m
360.7202 259.9199 L
SUu360.7202 259.9199 m
376.5601 256.0801 L
376.5601 246.48 L
SUu360.7202 259.9199 m
342.7202 255.6001 L
342.7202 246.48 L
SUu360.7202 259.9199 m
351.8398 257.7598 L
351.8398 246.48 L
SUu360.7202 259.9199 m
360.7202 274.3198 L
SUu360.7202 259.9199 m
360.7202 274.3198 L
SUu360.7202 259.9199 m
360.7202 274.3198 L
SUu306.7202 275.7598 m
306.7202 266.8799 L
SUu306.7202 266.8799 m
306.7202 255.6001 L
SUu306.7202 266.8799 m
288.7202 262.3198 L
288.7202 253.2002 L
SUu306.7202 266.8799 m
306.7202 271.2002 L
SUu306.7202 266.8799 m
306.7202 281.04 L
SUu306.7202 266.8799 m
306.7202 281.04 L
SUu306.7202 266.8799 m
306.7202 281.04 L
SUu315.8398 275.7598 m
315.8398 266.8799 L
SUu315.8398 266.8799 m
331.6802 262.7998 L
331.6802 253.2002 L
SUu315.8398 266.8799 m
320.3999 265.6802 L
320.3999 257.7598 L
SUu315.8398 266.8799 m
331.6802 262.7998 L
331.6802 257.7598 L
SUu315.8398 266.8799 m
316.5601 266.6401 L
316.5601 266.6401 L
SUu315.8398 266.8799 m
315.8398 281.04 L
SUu315.8398 266.8799 m
315.8398 281.04 L
SUu0 O
0 0 0 0.098 k
226.0801 237.6001 m
228.7202 238.0801 L
231.3599 239.2798 L
233.2798 241.2002 L
234.7202 243.8398 L
234.96 246.48 L
234.96 345.3599 L
234.7202 348 L
233.2798 350.6401 L
231.3599 352.5601 L
228.7202 353.7598 L
226.0801 354.2402 L
86.8799 354.2402 L
84 353.7598 L
81.6001 352.5601 L
79.4399 350.6401 L
78.2402 348 L
77.7598 345.3599 L
77.7598 246.48 L
78.2402 243.8398 L
79.4399 241.2002 L
81.6001 239.2798 L
84 238.0801 L
86.8799 237.6001 L
226.0801 237.6001 L
BU0 To
1 0 0 1 123.1201 343.2002 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j/_Helvetica-Bold 7.5 7.2149 -1.71 Tf
(CComponentT) Tx 1 80 Tk
(ree) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j210.2402 255.6001 m
213.1201 256.0801 L
215.52 257.2798 L
217.6802 259.2002 L
218.8799 261.8398 L
219.3599 264.48 L
219.3599 322.7998 L
218.8799 325.6802 L
217.6802 328.0801 L
215.52 330 L
213.1201 331.4399 L
210.2402 331.6802 L
120.2402 331.6802 L
117.6001 331.4399 L
114.96 330 L
113.04 328.0801 L
111.8398 325.6802 L
111.3599 322.7998 L
111.3599 264.48 L
111.8398 261.8398 L
113.04 259.2002 L
114.96 257.2798 L
117.6001 256.0801 L
120.2402 255.6001 L
210.2402 255.6001 L
BU0 To
1 0 0 1 120.96 320.6401 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j/_Helvetica 7.5 6.9825 -1.6874 Tf
(Components with children) Tx 1 0 Tk
(\r) TX 
TO
u0 R
0 0 0 1 K
1 J 1 j158.6401 309.3599 m
158.6401 300.2402 L
SUu158.6401 300.2402 m
194.6401 291.3599 L
194.6401 287.04 L
SUu158.6401 300.2402 m
140.6401 295.6802 L
140.6401 287.04 L
SUu158.6401 300.2402 m
149.52 298.0801 L
149.52 287.04 L
SUu158.6401 300.2402 m
158.6401 314.3999 L
SUu158.6401 300.2402 m
158.6401 314.3999 L
SUu158.6401 300.2402 m
158.6401 314.3999 L
SUu194.6401 287.04 m
194.6401 277.9199 L
SUu194.6401 277.9199 m
212.6401 273.6001 L
212.6401 262.3198 L
SUu194.6401 277.9199 m
176.6401 273.6001 L
176.6401 264.48 L
SUu194.6401 277.9199 m
185.52 275.7598 L
185.52 264.48 L
SUu194.6401 277.9199 m
194.6401 292.0801 L
SUu194.6401 277.9199 m
194.6401 292.0801 L
SUu194.6401 277.9199 m
194.6401 292.0801 L
SUu140.6401 287.04 m
140.6401 277.9199 L
SUu140.6401 277.9199 m
140.6401 266.8799 L
SUu140.6401 277.9199 m
122.6401 273.6001 L
122.6401 264.48 L
SUu140.6401 277.9199 m
140.6401 282.48 L
SUu140.6401 277.9199 m
140.6401 292.0801 L
SUu140.6401 277.9199 m
140.6401 292.0801 L
SUu140.6401 277.9199 m
140.6401 292.0801 L
SUu147.3599 280.3198 m
149.52 277.9199 L
SUu149.52 277.9199 m
163.4399 286.3198 L
170.1602 279.6001 L
SUu149.52 277.9199 m
153.6001 280.3198 L
159.1201 274.7998 L
SUu149.52 277.9199 m
163.4399 286.3198 L
167.04 282.7202 L
SUu149.52 277.9199 m
150.2402 278.3999 L
150.2402 278.3999 L
SUu149.52 277.9199 m
139.4399 288 L
SUu149.52 277.9199 m
139.4399 288 L
SUu0 O
0 0 0 0 k
192.2402 241.9199 m
195.1201 242.3999 L
197.52 243.8398 L
199.6802 245.7598 L
200.8799 248.1602 L
201.3599 251.04 L
201.3599 309.3599 L
200.8799 312 L
199.6802 314.6401 L
197.52 316.5601 L
195.1201 317.7598 L
192.2402 318.2402 L
102.2402 318.2402 L
99.6001 317.7598 L
96.96 316.5601 L
95.2798 314.6401 L
94.0801 312 L
93.6001 309.3599 L
93.6001 251.04 L
94.0801 248.1602 L
95.2798 245.7598 L
96.96 243.8398 L
99.6001 242.3999 L
102.2402 241.9199 L
192.2402 241.9199 L
BU0 To
1 0 0 1 102.96 307.2002 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(Components with children) Tx 1 0 Tk
(\r) TX 
TO
u0 R
0 0 0 1 K
1 J 1 j140.6401 295.6802 m
140.6401 287.04 L
SUu140.6401 287.04 m
176.6401 277.9199 L
176.6401 273.6001 L
SUu140.6401 287.04 m
122.6401 282.48 L
122.6401 273.6001 L
SUu140.6401 287.04 m
131.52 284.8799 L
131.52 273.6001 L
SUu140.6401 287.04 m
140.6401 300.96 L
SUu140.6401 287.04 m
140.6401 300.96 L
SUu140.6401 287.04 m
140.6401 300.96 L
SUu176.6401 273.6001 m
176.6401 264.48 L
SUu176.6401 264.48 m
194.6401 259.9199 L
194.6401 248.8799 L
SUu176.6401 264.48 m
158.6401 259.9199 L
158.6401 251.04 L
SUu176.6401 264.48 m
167.52 262.3198 L
167.52 251.04 L
SUu176.6401 264.48 m
176.6401 278.6401 L
SUu176.6401 264.48 m
176.6401 278.6401 L
SUu176.6401 264.48 m
176.6401 278.6401 L
SUu122.6401 273.6001 m
122.6401 264.48 L
SUu122.6401 264.48 m
122.6401 253.2002 L
SUu122.6401 264.48 m
104.6401 259.9199 L
104.6401 251.04 L
SUu122.6401 264.48 m
122.6401 269.04 L
SUu122.6401 264.48 m
122.6401 278.6401 L
SUu122.6401 264.48 m
122.6401 278.6401 L
SUu122.6401 264.48 m
122.6401 278.6401 L
SUu131.52 273.6001 m
131.52 264.48 L
SUu131.52 264.48 m
147.3599 260.6401 L
147.3599 251.04 L
SUu131.52 264.48 m
136.0801 263.52 L
136.0801 255.6001 L
SUu131.52 264.48 m
147.3599 260.6401 L
147.3599 255.6001 L
SUu131.52 264.48 m
132.2402 264.2402 L
132.2402 264.2402 L
SUu131.52 264.48 m
131.52 278.6401 L
SUu131.52 264.48 m
131.52 278.6401 L
SUu0 O
0 0 0 0 k
349.6802 354.2402 m
347.7598 360.48 L
346.3198 357.8398 L
294.7202 384.48 L
293.2798 381.6001 L
344.8799 354.96 L
343.4399 352.3198 L
349.6802 354.2402 L
BUu156.2402 354.2402 m
162.48 352.3198 L
161.04 354.96 L
211.9199 382.0801 L
210.48 384.7202 L
159.6001 357.8398 L
158.1602 360.48 L
156.2402 354.2402 L
BUu351.1201 192.48 m
355.6802 187.9199 L
355.6802 191.04 L
387.8398 191.04 L
387.8398 194.1602 L
355.6802 194.1602 L
355.6802 197.04 L
351.1201 192.48 L
BUu157.9199 192.48 m
162.2402 197.04 L
162.2402 194.1602 L
198.96 194.1602 L
198.96 191.04 L
162.2402 191.04 L
162.2402 187.9199 L
157.9199 192.48 L
BUu266.6401 181.2002 m
269.2798 181.6802 L
271.9199 182.8799 L
273.8398 185.04 L
275.04 187.4399 L
275.52 190.3198 L
275.52 194.8799 L
275.04 197.52 L
273.8398 200.1602 L
271.9199 202.0801 L
269.2798 203.2798 L
266.6401 203.7598 L
208.0801 203.7598 L
205.2002 203.2798 L
202.7998 202.0801 L
200.8799 200.1602 L
199.4399 197.52 L
198.96 194.8799 L
198.96 190.3198 L
199.4399 187.4399 L
200.8799 185.04 L
202.7998 182.8799 L
205.2002 181.6802 L
208.0801 181.2002 L
266.6401 181.2002 L
BU0 To
1 0 0 1 204.48 190.0801 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(CGUIBuilderVisitor) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j455.2798 181.2002 m
458.1602 181.6802 L
460.5601 182.8799 L
462.7202 185.04 L
463.9199 187.4399 L
464.3999 190.3198 L
464.3999 194.8799 L
463.9199 197.52 L
462.7202 200.1602 L
460.5601 202.0801 L
458.1602 203.2798 L
455.2798 203.7598 L
396.7202 203.7598 L
394.0801 203.2798 L
391.4399 202.0801 L
389.52 200.1602 L
388.3198 197.52 L
387.8398 194.8799 L
387.8398 190.3198 L
388.3198 187.4399 L
389.52 185.04 L
391.4399 182.8799 L
394.0801 181.6802 L
396.7202 181.2002 L
455.2798 181.2002 L
BU0 To
1 0 0 1 394.0801 190.0801 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(CProcessManager) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j201.3599 80.8799 m
204 81.3599 L
206.6401 82.5601 L
208.5601 84.48 L
209.7598 87.1201 L
210.2402 89.7598 L
210.2402 148.0801 L
209.7598 150.96 L
208.5601 153.3599 L
206.6401 155.2798 L
204 156.7202 L
201.3599 156.96 L
111.3599 156.96 L
108.48 156.7202 L
106.0801 155.2798 L
103.9199 153.3599 L
102.7202 150.96 L
102.2402 148.0801 L
102.2402 89.7598 L
102.7202 87.1201 L
103.9199 84.48 L
106.0801 82.5601 L
108.48 81.3599 L
111.3599 80.8799 L
201.3599 80.8799 L
BU0 To
1 0 0 1 138.48 145.9199 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(CGUIT) Tx 1 120 Tk
(ree) Tx 1 0 Tk
(\r) TX 
TO
u0 R
0 0 0 1 K
1 J 1 j149.52 134.6401 m
149.52 125.52 L
SUu149.52 125.52 m
185.52 116.6401 L
185.52 112.0801 L
SUu149.52 125.52 m
131.52 120.96 L
131.52 112.0801 L
SUu149.52 125.52 m
140.6401 123.3599 L
140.6401 112.0801 L
SUu149.52 125.52 m
149.52 139.6802 L
SUu149.52 125.52 m
149.52 139.6802 L
SUu149.52 125.52 m
149.52 139.6802 L
SUu185.52 112.0801 m
185.52 102.96 L
SUu185.52 102.96 m
203.52 98.6401 L
203.52 87.6001 L
SUu185.52 102.96 m
167.52 98.6401 L
167.52 89.7598 L
SUu185.52 102.96 m
176.6401 100.7998 L
176.6401 89.7598 L
SUu185.52 102.96 m
185.52 117.3599 L
SUu185.52 102.96 m
185.52 117.3599 L
SUu185.52 102.96 m
185.52 117.3599 L
SUu131.52 112.0801 m
131.52 102.96 L
SUu131.52 102.96 m
131.52 92.1602 L
SUu131.52 102.96 m
113.52 98.6401 L
113.52 89.7598 L
SUu131.52 102.96 m
131.52 107.52 L
SUu131.52 102.96 m
131.52 117.3599 L
SUu131.52 102.96 m
131.52 117.3599 L
SUu131.52 102.96 m
131.52 117.3599 L
SUu140.6401 112.0801 m
140.6401 102.96 L
SUu140.6401 102.96 m
156.2402 99.1201 L
156.2402 89.7598 L
SUu140.6401 102.96 m
144.96 102 L
144.96 94.3198 L
SUu140.6401 102.96 m
156.2402 99.1201 L
156.2402 94.3198 L
SUu140.6401 102.96 m
141.3599 102.96 L
141.3599 102.96 L
SUu140.6401 102.96 m
140.6401 117.3599 L
SUu140.6401 102.96 m
140.6401 117.3599 L
SUu0 O
0 0 0 0 k
381.1201 107.04 m
383.7598 107.52 L
386.3999 108.7202 L
388.3198 110.6401 L
389.52 113.2798 L
390 115.9199 L
390 120.48 L
389.52 123.3599 L
388.3198 125.7598 L
386.3999 127.6802 L
383.7598 129.1201 L
381.1201 129.6001 L
318 129.6001 L
315.3599 129.1201 L
312.7202 127.6802 L
310.7998 125.7598 L
309.6001 123.3599 L
309.1201 120.48 L
309.1201 115.9199 L
309.6001 113.2798 L
310.7998 110.6401 L
312.7202 108.7202 L
315.3599 107.52 L
318 107.04 L
381.1201 107.04 L
BU0 To
1 0 0 1 313.9199 115.9199 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(Gener) Tx 1 10 Tk
(ation algor) Tx 1 -15 Tk
(ithm) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j349.6802 66.7202 m
354 71.2798 L
351.1201 71.2798 L
351.1201 107.04 L
348 107.04 L
348 71.2798 L
345.1201 71.2798 L
349.6802 66.7202 L
BUu0 0 0 0.098 k
394.5601 1.4399 m
397.4399 1.9199 L
399.8398 3.1201 L
401.7598 5.2798 L
403.2002 7.6802 L
403.6802 10.5601 L
403.6802 57.8398 L
403.2002 60.48 L
401.7598 63.1201 L
399.8398 65.04 L
397.4399 66.2402 L
394.5601 66.7202 L
304.5601 66.7202 L
301.6802 66.2402 L
299.2798 65.04 L
297.3599 63.1201 L
295.9199 60.48 L
295.6802 57.8398 L
295.6802 10.5601 L
295.9199 7.6802 L
297.3599 5.2798 L
299.2798 3.1201 L
301.6802 1.9199 L
304.5601 1.4399 L
394.5601 1.4399 L
BU0 To
1 0 0 1 318.48 55.4399 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j/_Helvetica-Bold 7.5 7.2149 -1.71 Tf
(T) Tx 1 60 Tk
(ec) Tx 1 10 Tk
(hnology files) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j392.3999 26.1602 m
395.04 26.6401 L
397.6802 27.8398 L
399.6001 30 L
400.7998 32.3999 L
401.2798 35.2798 L
400.7998 37.9199 L
399.6001 40.5601 L
397.6802 42.48 L
395.04 43.9199 L
392.3999 44.1602 L
342.7202 44.1602 L
340.0801 43.9199 L
337.4399 42.48 L
335.52 40.5601 L
334.3198 37.9199 L
333.8398 35.2798 L
334.3198 32.3999 L
335.52 30 L
337.4399 27.8398 L
340.0801 26.6401 L
342.7202 26.1602 L
392.3999 26.1602 L
BU0 To
1 0 0 1 337.9199 32.8799 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j/_Helvetica 7.5 6.9825 -1.6874 Tf
(T) Tx 1 120 Tk
(echnology file C) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j374.3999 17.2798 m
377.04 17.7598 L
379.6802 18.96 L
381.6001 20.8799 L
382.7998 23.52 L
383.2798 26.1602 L
382.7998 29.04 L
381.6001 31.4399 L
379.6802 33.6001 L
377.04 34.7998 L
374.3999 35.2798 L
324.7202 35.2798 L
322.0801 34.7998 L
319.4399 33.6001 L
317.52 31.4399 L
316.3198 29.04 L
315.8398 26.1602 L
316.3198 23.52 L
317.52 20.8799 L
319.4399 18.96 L
322.0801 17.7598 L
324.7202 17.2798 L
374.3999 17.2798 L
BU0 To
1 0 0 1 320.1602 23.7598 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(T) Tx 1 120 Tk
(echnology file B) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j356.3999 8.1602 m
359.04 8.6401 L
361.6802 9.8398 L
363.6001 12 L
364.7998 14.3999 L
365.2798 17.2798 L
364.7998 19.9199 L
363.6001 22.5601 L
361.6802 24.48 L
359.04 25.6802 L
356.3999 26.1602 L
306.7202 26.1602 L
304.0801 25.6802 L
301.4399 24.48 L
299.52 22.5601 L
298.3198 19.9199 L
297.8398 17.2798 L
298.3198 14.3999 L
299.52 12 L
301.4399 9.8398 L
304.0801 8.6401 L
306.7202 8.1602 L
356.3999 8.1602 L
BU0 To
1 0 0 1 302.1602 14.8799 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(T) Tx 1 120 Tk
(echnology file A) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j68.8799 107.04 m
71.52 107.52 L
74.1602 108.7202 L
76.0801 110.6401 L
77.2798 113.2798 L
77.7598 115.9199 L
77.7598 120.48 L
77.2798 123.3599 L
76.0801 125.7598 L
74.1602 127.6802 L
71.52 129.1201 L
68.8799 129.6001 L
10.3198 129.6001 L
7.4399 129.1201 L
5.04 127.6802 L
2.8799 125.7598 L
1.6799 123.3599 L
1.2 120.48 L
1.2 115.9199 L
1.6799 113.2798 L
2.8799 110.6401 L
5.04 108.7202 L
7.4399 107.52 L
10.3198 107.04 L
68.8799 107.04 L
BU0 To
1 0 0 1 10.0801 115.9199 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j(CSer) Tx 1 -15 Tk
(ializ) Tx 1 15 Tk
(erVisitor) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j102.2402 118.3198 m
97.6802 113.7598 L
97.6802 116.6401 L
77.7598 116.6401 L
77.7598 119.7598 L
97.6802 119.7598 L
97.6802 122.8799 L
102.2402 118.3198 L
BUu0 0 0 0.098 k
64.3198 46.5601 m
66.96 47.04 L
69.6001 48.2402 L
71.52 50.1602 L
72.7202 52.7998 L
73.2002 55.4399 L
73.2002 60 L
72.7202 62.8799 L
71.52 65.2798 L
69.6001 67.2002 L
66.96 68.6401 L
64.3198 68.8799 L
14.8799 68.8799 L
12 68.6401 L
9.3601 67.2002 L
7.4399 65.2798 L
6.24 62.8799 L
5.76 60 L
5.76 55.4399 L
6.24 52.7998 L
7.4399 50.1602 L
9.3601 48.2402 L
12 47.04 L
14.8799 46.5601 L
64.3198 46.5601 L
BU0 To
1 0 0 1 11.7598 60.2402 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
0 J 0 j/_Helvetica-Bold 7.5 7.2149 -1.71 Tf
(Sa) Tx 1 15 Tk
(ved pr) Tx 1 20 Tk
(ocess) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 18.48 50.6401 0 Tp
0 Tv
TP
0 Tr
(description) Tx 1 0 Tk
(\r) TX 
TO
u0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j39.6001 68.8799 m
35.04 73.4399 L
37.9199 73.4399 L
37.9199 107.04 L
41.04 107.04 L
41.04 73.4399 L
43.9199 73.4399 L
39.6001 68.8799 L
BUULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore 
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
