%!PS-Adobe-2.0
%%Creator: dvips, version 5.4
%%Title: de211.dvi
%%Pages: 2 1
%%BoundingBox: 0 0 612 1008
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR}B /@letter{/vsize 10 N}B /@landscape{
/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{/vsize 15.5531 N
}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{statusdict
/manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0
]N /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0
]N df-tail}B /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N
/FontBBox FBB N string /base X array /BitMaps X /BuildChar{CharBuilder}N
/Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[
}B /E{pop nn dup definefont setfont}B /ch-image{ch-data dup type /stringtype
ne{ctr get /ctr ctr 1 add N}if}B /ch-width{ch-data dup length 5 sub get}B
/ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup length 3
sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data
dup length 1 sub get}B /ctr 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff
ch-height sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height
true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{
/cc X dup type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S
ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr
ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI
save N @rigin 0 0 moveto}B /eop{clear SI restore showpage userdict /eop-hook
known{eop-hook}if}B /@start{userdict /start-hook known{start-hook}if
/VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255{IE S 1
string dup 0 3 index put cvn put}for}B /p /show load N /RMat[1 0 0 -1 0 0]N
/BDot 8 string N /v{/ruley X /rulex X V}B /V{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}B /a{moveto}B /delta 0 N /tail{
dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B /l{p
-4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t
{p 4 w}B /w{0 rmoveto}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save N}B
/eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N @MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury
currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S
lineto S lineto closepath clip newpath moveto}N /endTexFig{end psf$SavedState
restore}N /@beginspecial{SDict begin /SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults}B /@setspecial{CLIP{newpath 0 0 moveto hs 0
rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}{initclip}ifelse ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}B /@endspecial{grestore
clear SpecialSave restore end}B /@defspecial{SDict begin}B /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}B /st{stroke SaveX SaveY moveto}B /fil{fill SaveX SaveY
moveto}B /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}B end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa 5 111 df<07FE1FF800E0038000E0038000E003
8000E0038001C0070001C0070001C0070001C0070003800E0003800E0003FFFE0003800E000700
1C0007001C0007001C0007001C000E0038000E0038000E0038000E0038001C007000FF83FE001D
177F961D>72 D<07FF0000E00000E00000E00000E00001C00001C00001C00001C0000380000380
000380000380000700000700080700080700100E00100E00300E00200E00601C01E0FFFFC01517
7F9618>76 D<07FFF800E00E00E00700E00700E00701C00701C00701C00701C00E03801C038070
03FFC00380000700000700000700000700000E00000E00000E00000E00001C0000FF800018177F
9616>80 D<0300038003000000000000000000000000001C002400460046008C000C0018001800
180031003100320032001C0009177F960C>105 D<383C0044C6004702004602008E06000C0600
0C06000C0C00180C00180C40181840181880300880300F00120E7F8D15>110
D E /Fb 53 122 df<00008000000001C000000001C000000003E000000003E000000005F00000
0004F000000008F80000000878000000107C000000103C000000203E000000201E000000401F00
0000400F000000800F80000080078000010007C000010003C000020003E000020001E000040001
F000040000F000080000F80008000078001000007C001000003C002000003E002000001E007FFF
FFFF007FFFFFFF00FFFFFFFF8021207E9F26>1 D<0020004000800100020006000C000C001800
18003000300030007000600060006000E000E000E000E000E000E000E000E000E000E000E000E0
006000600060007000300030003000180018000C000C000600020001000080004000200B2E7DA1
12>40 D<800040002000100008000C00060006000300030001800180018001C000C000C000C000
E000E000E000E000E000E000E000E000E000E000E000E000C000C000C001C00180018001800300
0300060006000C00080010002000400080000B2E7DA112>I<70F8FCFC74040404080810102040
060E7C840D>44 D<FFC0FFC00A027F8A0F>I<70F8F8F87005057C840D>I<000300030007000600
06000E000C000C001C0018001800380030003000700060006000E000C000C001C0018001800180
0380030003000700060006000E000C000C001C0018001800380030003000700060006000E000C0
00C000102D7DA117>I<03F0000E1C001C0E00180600380700700380700380700380700380F003
C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C07003
807003807003807807803807001806001C0E000E1C0003F000121F7E9D17>I<018003800F80F3
800380038003800380038003800380038003800380038003800380038003800380038003800380
0380038003800380038007C0FFFE0F1E7C9D17>I<03F0000C1C00100E00200700400780800780
F007C0F803C0F803C0F803C02007C00007C0000780000780000F00000E00001C00003800007000
00600000C0000180000300000600400C00401800401000803FFF807FFF80FFFF80121E7E9D17>
I<03F0000C1C00100E00200F00780F80780780780780380F80000F80000F00000F00000E00001C
0000380003F000003C00000E00000F000007800007800007C02007C0F807C0F807C0F807C0F007
80400780400F00200E001C3C0003F000121F7E9D17>I<000600000600000E00000E00001E0000
2E00002E00004E00008E00008E00010E00020E00020E00040E00080E00080E00100E00200E0020
0E00400E00C00E00FFFFF0000E00000E00000E00000E00000E00000E00000E0000FFE0141E7F9D
17>I<1803001FFE001FFC001FF8001FE00010000010000010000010000010000010000011F000
161C00180E001007001007800003800003800003C00003C00003C07003C0F003C0F003C0E00380
400380400700200600100E000C380003E000121F7E9D17>I<4000007FFFC07FFF807FFF804001
0080020080020080040000080000080000100000200000200000400000400000C00000C00001C0
000180000380000380000380000380000780000780000780000780000780000780000780000300
00121F7D9D17>55 D<03F0000C0C00100600300300200180600180600180600180700180780300
3E03003F06001FC8000FF00003F80007FC000C7E00103F00300F806003804001C0C001C0C000C0
C000C0C000C0C000806001802001001002000C0C0003F000121F7E9D17>I<70F8F8F870000000
0000000000000070F8F8F87005147C930D>58 D<000100000003800000038000000380000007C0
000007C0000007C0000009E0000009E0000009E0000010F0000010F0000010F000002078000020
78000020780000403C0000403C0000403C0000801E0000801E0000FFFE0001000F0001000F0001
000F00020007800200078002000780040003C00E0003C01F0007E0FFC03FFE1F207F9F22>65
D<FFFFE0000F80380007801E0007801F0007800F0007800F8007800F8007800F8007800F800780
0F8007800F0007801F0007801E0007803C0007FFF00007803C0007801E0007800F0007800F8007
800780078007C0078007C0078007C0078007C0078007C00780078007800F8007800F0007801F00
0F803C00FFFFF0001A1F7E9E20>I<000FC040007030C001C009C0038005C0070003C00E0001C0
1E0000C01C0000C03C0000C07C0000407C00004078000040F8000000F8000000F8000000F80000
00F8000000F8000000F8000000F8000000F8000000780000007C0000407C0000403C0000401C00
00401E0000800E000080070001000380020001C0040000703800000FC0001A217D9F21>I<FFFF
E0000F803C0007801E000780070007800380078003C0078001E0078001E0078001F0078000F007
8000F0078000F8078000F8078000F8078000F8078000F8078000F8078000F8078000F8078000F8
078000F0078000F0078000F0078001E0078001E0078003C0078003800780070007800E000F803C
00FFFFE0001D1F7E9E23>I<FFFFFF000F800F0007800300078003000780010007800180078000
800780008007800080078080800780800007808000078080000781800007FF8000078180000780
800007808000078080000780800007800020078000200780002007800040078000400780004007
8000C0078000C0078001800F800F80FFFFFF801B1F7E9E1F>I<FFFFFF000F800F000780030007
800300078001000780018007800080078000800780008007800080078080000780800007808000
078080000781800007FF8000078180000780800007808000078080000780800007800000078000
000780000007800000078000000780000007800000078000000FC00000FFFE0000191F7E9E1E>
I<000FE0200078186000E004E0038002E0070001E00F0000E01E0000601E0000603C0000603C00
00207C00002078000020F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8
007FFCF80003E0780001E07C0001E03C0001E03C0001E01E0001E01E0001E00F0001E0070001E0
038002E000E0046000781820000FE0001E217D9F24>I<FFF8FFF80F800F8007800F0007800F00
07800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F
0007FFFF0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F000780
0F0007800F0007800F0007800F0007800F0007800F000F800F80FFF8FFF81D1F7E9E22>I<FFFC
0FC007800780078007800780078007800780078007800780078007800780078007800780078007
80078007800780078007800780078007800FC0FFFC0E1F7F9E10>I<FFFE000FC0000780000780
000780000780000780000780000780000780000780000780000780000780000780000780000780
0007800007800007800007800207800207800207800207800607800407800407800C07801C0F80
7CFFFFFC171F7E9E1C>76 D<FF803FF807C007C007C0038005E0010005E0010004F00100047801
0004780100043C0100043C0100041E0100040F0100040F010004078100040781000403C1000401
E1000401E1000400F1000400F1000400790004003D0004003D0004001F0004001F0004000F0004
000700040007000E0003001F000300FFE001001D1F7E9E22>78 D<FFFFE0000F80780007801C00
07801E0007800F0007800F8007800F8007800F8007800F8007800F8007800F8007800F0007801E
0007801C000780780007FFE0000780000007800000078000000780000007800000078000000780
00000780000007800000078000000780000007800000078000000FC00000FFFC0000191F7E9E1F
>80 D<7FFFFFE0780F01E0600F0060400F0020400F0020C00F0030800F0010800F0010800F0010
800F0010000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F
0000001F800007FFFE001C1F7E9E21>84 D<FFF003FE1F8000F80F0000600F8000600780004007
80004003C0008003C0008003C0008001E0010001E0010001F0010000F0020000F0020000F80600
0078040000780400003C0800003C0800003C0800001E1000001E1000001F3000000F2000000F20
000007C0000007C0000007C000000380000003800000038000000100001F207F9E22>86
D<FFF07FF81FF01F800FC007C00F00078003800F00078001000F0007C00100078007C002000780
07C00200078007C0020003C009E0040003C009E0040003C009E0040003E010F00C0001E010F008
0001E010F0080001F02078080000F02078100000F02078100000F0403C10000078403C20000078
403C20000078C03E2000003C801E4000003C801E4000003C801E4000001F000F8000001F000F80
00001F000F8000001E00078000000E00070000000E00070000000C000300000004000200002C20
7F9E2F>I<FFF003FF1F8000F80F8000600780004007C0004003E0008001E0008001F0010000F0
030000F80200007C0400003C0400003E0800001E0800001F1000000FB0000007A0000007C00000
03C0000003C0000003C0000003C0000003C0000003C0000003C0000003C0000003C0000003C000
0003C0000007C000007FFE00201F7F9E22>89 D<1FE000303000781800781C00300E00000E0000
0E00000E0000FE00078E001E0E00380E00780E00F00E10F00E10F00E10F01E10781E103867200F
83C014147E9317>97 D<0E0000FE00000E00000E00000E00000E00000E00000E00000E00000E00
000E00000E00000E3E000EC3800F01C00F00E00E00E00E00700E00700E00780E00780E00780E00
780E00780E00780E00700E00700E00E00F00E00D01C00CC300083E0015207F9F19>I<03F80E0C
1C1E381E380C70007000F000F000F000F000F000F00070007000380138011C020E0C03F010147E
9314>I<000380003F800003800003800003800003800003800003800003800003800003800003
8003E380061B801C0780380380380380700380700380F00380F00380F00380F00380F00380F003
807003807003803803803807801C07800E1B8003E3F815207E9F19>I<03F0000E1C001C0E0038
0700380700700700700380F00380F00380FFFF80F00000F00000F0000070000070000038008018
00800C010007060001F80011147F9314>I<0000E003E3300E3C301C1C30380E00780F00780F00
780F00780F00780F00380E001C1C001E380033E0002000002000003000003000003FFE001FFF80
0FFFC03001E0600070C00030C00030C00030C000306000603000C01C038003FC00141F7F9417>
103 D<0E0000FE00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0000
0E3E000E43000E81800F01C00F01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C00E01C0FFE7FC16207F9F19>I<1C001E003E001E001C0000
00000000000000000000000E007E000E000E000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E00FFC00A1F809E0C>I<00E001F001F001F000E000000000000000000000
0000007007F000F000700070007000700070007000700070007000700070007000700070007000
70007000700070007000706070F060F0C061803F000C28829E0E>I<0E00FE000E000E000E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E00FFE00B20809F0C>108 D<0E1F01F000FE618618000E81C81C000F
00F00E000F00F00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E00
0E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E
00FFE7FE7FE023147F9326>I<0E3E00FE43000E81800F01C00F01C00E01C00E01C00E01C00E01
C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0FFE7FC16147F9319
>I<01F800070E001C03803801C03801C07000E07000E0F000F0F000F0F000F0F000F0F000F0F0
00F07000E07000E03801C03801C01C0380070E0001F80014147F9317>I<0E3E00FEC3800F01C0
0F00E00E00E00E00F00E00700E00780E00780E00780E00780E00780E00780E00700E00F00E00E0
0F01E00F01C00EC3000E3E000E00000E00000E00000E00000E00000E00000E00000E0000FFE000
151D7F9319>I<0E78FE8C0F1E0F1E0F0C0E000E000E000E000E000E000E000E000E000E000E00
0E000E000E00FFE00F147F9312>114 D<1F9030704030C010C010C010E00078007F803FE00FF0
0070803880188018C018C018E030D0608F800D147E9312>I<020002000200060006000E000E00
3E00FFF80E000E000E000E000E000E000E000E000E000E000E000E080E080E080E080E08061003
1001E00D1C7F9B12>I<0E01C0FE1FC00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01
C00E01C00E01C00E01C00E01C00E01C00E01C00E03C00603C0030DC001F1FC16147F9319>I<FF
83F81E01E01C00C00E00800E00800E008007010007010003820003820003820001C40001C40001
EC0000E80000E80000700000700000700000200015147F9318>I<7FC3FC0F01E00701C0070180
03810001C20000E40000EC00007800003800003C00007C00004E000087000107000303800201C0
0601E01E01E0FF07FE1714809318>120 D<FF83F81E01E01C00C00E00800E00800E0080070100
07010003820003820003820001C40001C40001EC0000E80000E800007000007000007000002000
002000004000004000004000F08000F08000F100006200003C0000151D7F9318>I
E /Fc 8 115 df<000E00001E00007E0007FE00FFFE00FFFE00F8FE0000FE0000FE0000FE0000
FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000
FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE007F
FFFE7FFFFE7FFFFE17277BA622>49 D<00FF800003FFF0000FFFFC003F03FF007C00FF807C007F
C0FE007FC0FF003FE0FF003FE0FF003FE0FF001FE07E001FE03C003FE000003FE000003FC00000
3FC000007F8000007F800000FF000001FE000001FC000003F0000007E000000FC000001F000000
3E0000007C00E0007800E000F000E001E001C0038001C0070001C00FFFFFC01FFFFFC03FFFFFC0
7FFFFFC0FFFFFF80FFFFFF80FFFFFF801B277DA622>I<FFFFFFF80000FFFFFFFF8000FFFFFFFF
E00003FC001FF80003FC0007FC0003FC0001FE0003FC0000FF0003FC00007F8003FC00003FC003
FC00001FC003FC00001FE003FC00001FE003FC00000FF003FC00000FF003FC00000FF003FC0000
0FF003FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF803
FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF003FC00000FF003FC0000
0FF003FC00001FE003FC00001FE003FC00001FC003FC00003FC003FC00007F8003FC00007F0003
FC0001FE0003FC0003FC0003FC001FF800FFFFFFFFE000FFFFFFFF8000FFFFFFFC00002D297DA8
35>68 D<001FF80000FFFE0003F01F000FE03F801FC03F803F803F803F803F807F801F007F0000
00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000007F00
00007F8000003F8001C03FC001C01FC003C00FE0078003F01F0000FFFC00001FE0001A1B7E9A1F
>99 D<00003FF80000003FF80000003FF800000003F800000003F800000003F800000003F80000
0003F800000003F800000003F800000003F800000003F800000003F800000003F800000003F800
001FE3F80000FFFBF80003F03FF8000FE00FF8001FC007F8003F8003F8003F8003F8007F8003F8
007F0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003
F800FF0003F800FF0003F8007F0003F8007F0003F8003F8003F8003F8007F8001FC00FF8000FE0
1FF80003F03FFF8000FFF3FF80003FC3FF80212A7EA926>I<003FE00001FFF80003F07E000FE0
3F001FC01F803F800FC03F800FC07F000FC07F0007E0FF0007E0FF0007E0FF0007E0FFFFFFE0FF
FFFFE0FF000000FF000000FF000000FF0000007F0000007F8000003F8000E03F8001E01FC001C0
0FE003C003F81F8000FFFE00001FF0001B1B7E9A20>I<003FE00001FFFC0003F07E000FC01F80
1F800FC03F800FE03F0007E07F0007F07F0007F07F0007F0FF0007F8FF0007F8FF0007F8FF0007
F8FF0007F8FF0007F8FF0007F8FF0007F87F0007F07F0007F03F800FE03F800FE01F800FC00FC0
1F8007F07F0001FFFC00003FE0001D1B7E9A22>111 D<FFC1F0FFC7FCFFCE3E0FDC7F0FD87F0F
F87F0FF07F0FF03E0FF0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000F
E0000FE0000FE0000FE0000FE0000FE000FFFF00FFFF00FFFF00181B7E9A1C>114
D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin @legal /legal where {pop legal} if
%%EndSetup
%%Page: 1 1
bop 224 904 a Fc(1)69 b(Deco)r(der)22 b(de211)224 1039 y Fb(F)l(unctie:)f
(2-to-4)14 b(deco)q(der/dem)o(ultiplexe)q(r)224 1129 y(T)l(erminalv)o
(olgorde:)21 b(\(A,)14 b(B,)h(Y0,)g(Y1,)g(Y2,)f(Y3\))224 1220
y(IEC-sym)o(b)q(o)q(ol:)224 1278 y
 7313760 4973352 7696465 25062850 16182312 30917427 startTexFig
224 1278 a
%%BeginDocument: de211.iec.eps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.757895 0 0 0.757895 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 37.5 299 ] concat
163 206
163 321
236 321
236 206
4 Poly
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 37.5 299 ] concat
236 290 268 290 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 37.5 299 ] concat
236 269 268 269 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 37.5 299 ] concat
236 248 268 248 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 37.5 299 ] concat
236 227 268 227 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 37.5 299 ] concat
131 269 163 269 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 37.5 341 ] concat
131 248 163 248 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 156 595 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 156 575 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 226.5 614 ] concat
[
(DX)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 307.5 594.5 ] concat
[
(Y0)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 307.5 574 ] concat
[
(Y1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 307.5 553.5 ] concat
[
(Y2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 307.5 531 ] concat
[
(Y3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 205 595 ] concat
[
(0)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 205 574.5 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 227 585 ] concat
[
(Z)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 239 594 ] concat
[
(0)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 238.5 593.5 ] concat
[
(_)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 238.5 578 ] concat
[
(3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 3.41601 0 0 3.41601 211.021 594.395 ] concat
[
(})
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 264 594 ] concat
[
(0)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 264 574 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 264 551.5 ] concat
[
(2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 264 531.5 ] concat
[
(3)
] Text
End

End %I eop

showpage


end
%%EndDocument
 224 1278 a
 endTexFig
224 1725 a Fb(W)l(aarheidstab)q(el:)p 224 1776 603 2 v 223
1833 2 57 v 249 1816 a(A)51 b(B)p 391 1833 V 400 1833 V 59
w(Y0)f(Y2)f(Y3)h(Y4)p 826 1833 V 224 1834 603 2 v 223 1891
2 57 v 252 1874 a(L)56 b(L)p 391 1891 V 400 1891 V 73 w(H)75
b(L)k(L)f(L)p 826 1891 V 223 1947 V 252 1930 a(L)53 b(H)p 391
1947 V 400 1947 V 72 w(L)76 b(H)g(L)i(L)p 826 1947 V 223 2004
V 249 1987 a(H)53 b(L)p 391 2004 V 400 2004 V 75 w(L)79 b(L)d(H)f(L)p
826 2004 V 223 2060 V 249 2043 a(H)50 b(H)p 391 2060 V 400
2060 V 72 w(L)79 b(L)g(L)c(H)p 826 2060 V 224 2062 603 2 v
224 2202 a(Propagatietijden:)p 224 2262 901 2 v 223 2319 2
57 v 249 2302 a(P)o(arameter)p 480 2319 V 49 w(V)l(an)p 608
2319 V 64 w(Naar)p 784 2319 V 64 w(T)o(yp)p 915 2319 V 49 w(Eenheid)p
1124 2319 V 224 2320 901 2 v 223 2377 2 57 v 294 2360 a(T)327
2367 y Fa(P)5 b(LH)p 480 2377 V 528 2360 a Fb(A)p 608 2377
V 72 w(Y0,Y2)p 784 2377 V 60 w(0.5)p 915 2377 V 119 w(ns)p
1124 2377 V 223 2433 V 294 2416 a(T)327 2423 y Fa(P)g(H)s(L)p
480 2433 V 528 2416 a Fb(A)p 608 2433 V 72 w(Y0,Y2)p 784 2433
V 60 w(0.3)p 915 2433 V 119 w(ns)p 1124 2433 V 223 2490 V 294
2473 a(T)327 2480 y Fa(P)g(LH)p 480 2490 V 528 2473 a Fb(A)p
608 2490 V 72 w(Y1,Y3)p 784 2490 V 60 w(0.8)p 915 2490 V 119
w(ns)p 1124 2490 V 223 2546 V 294 2529 a(T)327 2536 y Fa(P)g(H)s(L)p
480 2546 V 528 2529 a Fb(A)p 608 2546 V 72 w(Y1,Y3)p 784 2546
V 60 w(0.8)p 915 2546 V 119 w(ns)p 1124 2546 V 223 2603 V 294
2586 a(T)327 2593 y Fa(P)g(LH)p 480 2603 V 529 2586 a Fb(B)p
608 2603 V 73 w(Y0,Y1)p 784 2603 V 60 w(0.5)p 915 2603 V 119
w(ns)p 1124 2603 V 223 2659 V 294 2642 a(T)327 2649 y Fa(P)g(H)s(L)p
480 2659 V 529 2642 a Fb(B)p 608 2659 V 73 w(Y0,Y1)p 784 2659
V 60 w(0.3)p 915 2659 V 119 w(ns)p 1124 2659 V 223 2716 V 294
2699 a(T)327 2706 y Fa(P)g(LH)p 480 2716 V 529 2699 a Fb(B)p
608 2716 V 73 w(Y2,Y3)p 784 2716 V 60 w(0.8)p 915 2716 V 119
w(ns)p 1124 2716 V 223 2772 V 294 2755 a(T)327 2762 y Fa(P)g(H)s(L)p
480 2772 V 529 2755 a Fb(B)p 608 2772 V 73 w(Y2,Y3)p 784 2772
V 60 w(0.8)p 915 2772 V 119 w(ns)p 1124 2772 V 224 2774 901
2 v 223 2830 2 57 v 275 2813 a(\001T)346 2820 y Fa(P)g(LH)p
480 2830 V 511 2813 a Fb(alle)p 608 2830 V 85 w(alle)p 784
2830 V 91 w(2.2)p 915 2830 V 80 w(ns/pF)p 1124 2830 V 223 2887
V 275 2870 a(\001T)346 2877 y Fa(P)g(H)s(L)p 480 2887 V 511
2870 a Fb(alle)p 608 2887 V 85 w(alle)p 784 2887 V 91 w(1.0)p
915 2887 V 80 w(ns/pF)p 1124 2887 V 224 2888 901 2 v 223 2945
2 57 v 318 2928 a(C)351 2935 y Fa(in)p 480 2945 V 528 2928
a Fb(A)p 608 2945 V 83 w(GND)p 784 2945 V 60 w(0.38)p 915 2945
V 101 w(pF)p 1124 2945 V 223 3001 V 318 2984 a(C)351 2991 y
Fa(in)p 480 3001 V 529 2984 a Fb(B)p 608 3001 V 84 w(GND)p
784 3001 V 60 w(0.37)p 915 3001 V 101 w(pF)p 1124 3001 V 224
3003 901 2 v 960 3625 a(1)p eop
%%Page: 2 2
bop 224 952 a Fb(circuit:)702 b(la)o(y)o(out:)224 1888 y
 11796480 12622228 2368143 12959006 16313876 27891466 startTexFig
224 1888 a
%%BeginDocument: de211.cir.eps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.757895 0 0 0.757895 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 129.25 352 ] concat
184 326 268 410 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 -59.0001 159 ] concat
280 272 322 314 Rect
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 129.25 352 ] concat
268 368 352 368 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 129.25 352 ] concat
268 200 352 200 Line
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 142.75 270.5 ] concat
157 153 241 237 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 142.75 134.5 ] concat
157 257 241 341 Rect
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 142.75 134.5 ] concat
241 467 325 467 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 142.75 134.5 ] concat
241 489 261 467 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 142.75 134.5 ] concat
241 299 325 299 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 142.75 134.5 ] concat
241 319 261 299 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 142.75 134.5 ] concat
241 657 261 635 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 36.25 89 ] concat
227 458 237 447 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 36.25 100 ] concat
143 447 185 447 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 36.25 100 ] concat
164 363 185 363 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 36.25 100 ] concat
143 279 185 279 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 36.25 99 ] concat
164 195 185 195 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 242.25 463 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 242.25 547 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 242.25 379 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 242.25 294 ] concat
[
(1)
] Text
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
15 414 99 498 Rect
End

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.404762 97.5 255.428 ] concat
15 226 99 330 Rect
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
247 436 163 436 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
247 268 163 268 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
247 98 163 98 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
99 456 141 456 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
99 478 121 456 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
99 288 141 288 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
99 310 121 288 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
205 478 205 604 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
141 456 163 456 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
163 456 163 436 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
141 288 141 268 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
141 268 163 268 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 108.5 224 ] concat
141 268 141 98 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
163 99 163 99 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
205 436 205 140 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
163 310 163 372 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 97.5 224 ] concat
163 372 15 372 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
40 97 124 97 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
124 265 40 265 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
272 455 82 455 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 32 319.5 ] concat
104 97 104 349 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
82 349 314 349 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
62 455 62 265 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
104 265 104 181 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
124 181 104 181 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
82 455 62 455 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.5 0 0 0.5 43 319.5 ] concat
314 413 356 413 Line
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 126 463.5 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 126 379.5 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 50.5 458.5 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 50.5 374.5 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 308.5 542 ] concat
[
(Y0)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 308.5 458.5 ] concat
[
(Y1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 308.5 374.5 ] concat
[
(Y2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Times-Bold 14 SetF
[ 1 0 0 1 308.5 290.5 ] concat
[
(Y3)
] Text
End

Begin %I Pict

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
207 487 274 447 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
274 447 208 403 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
276 434 214 390 Line
End

End %I eop

Begin %I Pict
[ 1 0 0 1 0.499985 -83 ] concat

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
207 487 274 447 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
274 447 208 403 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
276 434 214 390 Line
End

End %I eop

Begin %I Pict
[ 1 0 0 1 0.499969 -167.5 ] concat

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
207 487 274 447 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
274 447 208 403 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
276 434 214 390 Line
End

End %I eop

Begin %I Pict
[ 1 0 0 1 0.499954 -252.5 ] concat

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
207 487 274 447 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
274 447 208 403 Line
End

Begin %I Line
2 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 0.125 0 0 0.125 205.25 485.75 ] concat
276 434 214 390 Line
End

End %I eop

End %I eop

showpage


end
%%EndDocument
 224 1888 a
 endTexFig
992 1193 a
 11796480 34563684 10853990 1907671 28286156 53151662 startTexFig
992 1193 a
%%BeginDocument: de211.lay.eps


/fillBigPaths {/bigPathFill exch def} def

  true  fillBigPaths   % Goes well if poly has no holes.
		       % plotted incorrectly. The result is that the masks
		       % that contain such polygons are not filled
		       % (contour only), but the layout is otherwise
		       % plotted normally.


/EPSLayDict 140 dict def EPSLayDict begin
/Style 40 dict def
0 setlinewidth

/pathCount 0 def
/pathLimit 1000 def
/pathLimitExceeded false def


/plotFont {
    aload pop
    /FontName exch def
    /LambdaFs exch def
    /MaxFs    exch def
    /MinFs    exch def
    % [(FontName) FontName (LambdaFs) LambdaFs (MaxFs) MaxFs (MinFs) MinFs] ==
    % /FontSize MinFs def % avoid use before define
} def
[8 8 1 /Helvetica-Bold] plotFont % default 8 point non-proportional

/patternScale {aload pop /Bfreq exch def} def
[1] patternScale % default

/plotRotate {/Rotate exch def} def
false plotRotate % default

/Tailwd    1 def % width of arrow tails, in points
/Tipwd     6 def % width of arrow heads, in points

/plotPass {/passnumber exch def} def
1 plotPass

/basketweave  [1 8 <d1e3c5885c3e1d88>] def
/fishscale    [1 8 <3e418080e3140808>] def

/p2 [2 16 <1010200840048002000100000000000010100820044002800100000000000000>]
def
/p4 [2 16 <18000c00040000000004000c00180030006000c0008000008000c00060003000>]
def
/p5 [2 16 <c071c00101e001e001e0e001e001e3c103c003c0000f1c0f1c0f1c000070c071>]
def
/p6 [2 16 <1000001000000200000040000008010000000000100200000000004000000001>]
def
/p7 [2 16 <002100210021ffe1e1e1e1e1e1ffe1ff210021002100e1ffe1e1e1e1ffe1ffe1>]
def
/p8 [2 16 <0000000080c0c0c160033006180c0c1806300360c1c0c08000000000cccccccc>]
def
/p9 [2 16 <00000000c0c0c0c00000000000c000c000000000cccccccc0000000000c000c0>]
def
/p13 [2 16 <00ff00ff00ff00ff00ff00ff00ff00ffff00ff00ff00ff00ff00ff00ff00ff00>]
def
/p15 [2 16 <ffff0202040408081010202040408080ffff4040202010100808040402020101>]
def
/p16 [2 16 <4040202010100808040402020101808040402020101008080404020201018080>]
def
/p17 [2 16 <c0c06060303018180c0c060603038181c0c06060303018180c0c060603038181>]
def
/p18 [2 16 <0180024004200810100820044002800180014002200410080810042002400180>]
def
/p19 [2 16 <8080808080808080808080808080808080808080808080808080808080808080>]
def

/lines0    [1 8 <ff000000ff000000>] def % lines 0 degrees inclined (horiz)
/lines45   [1 8 <0102040810204080>] def % lines 45 degrees inclined (/)
/lines90   [1 8 <1111111111111111>] def % lines 90 degrees inclined (vert)
/lines135  [1 8 <8040201008040201>] def % lines 135 degrees inclined (\)
/flines0   [1 8 <ffff000000000000>] def % fat lines 0 dg. inclined (horiz)
/flines45  [1 8 <03060C183060C081>] def % fat lines 45 dg. inclined (/)
/flines90  [1 8 <3333333333333333>] def % fat lines 90 dg. inclined (vert)
/flines135 [1 8 <81C06030180C0603>] def % fat lines 135 dg. inclined (\)
/cross0    [1 8 <ff01010101010101>] def % lines 0 and 90
/cross45   [1 8 <110a040a11a040a0>] def % lines 45 and 135
/fcross45  [1 8 <331e0c1e33e1c0e1>] def % lines 45 and 135
/black     [1 8 <ffffffffffffffff>] def % black (or dots 100%)
/dots50    [1 8 <aa55aa55aa55aa55>] def % dots 50%
/dots25    [1 8 <8822882288228822>] def % dots 25%
/dots12    [1 8 <8800220088002200>] def % dots ~12% (1 of 8)
/dots6     [1 8 <8800000088000000>] def % dots ~ 6% (1 of 16)
/dots3     [1 8 <8000000080000000>] def % dots ~ 3% (1 of 32)
/dots2     [1 8 <8000000000000000>] def % dots ~ 2% (1 of 64)
/white     [1 8 <0000000000000000>] def % white (or dots 0%)

/bitison {
    /ybit exch def /xbit exch def
    bstring ybit bwidth mul
    xbit 8 idiv add get
    1 7 xbit 8 mod sub bitshift
    and 0 ne
} def

/setpattern {
    /bstring exch def
    /onbits 0 def /offbits 0 def
    freq 0 {
      /y exch def /x exch def
      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def
      xindex yindex bitison
        {/onbits onbits 1 add def 1}
        {/offbits offbits 1 add def 0}
        ifelse
    } setscreen
    {} settransfer
    offbits offbits onbits add div setgray
} def

/arrow {
    0 begin
    /ArrowType exch def 
    /headlength exch def
    /halfheadthickness exch 2 div def
    /halfthickness exch 2 div def
    /tipy exch def /tipx exch def
    /taily exch def /tailx exch def
    /dx tipx tailx sub def
    /dy tipy taily sub def
    /arrowlength dx dx mul dy dy mul add sqrt def
    /angle dy dx atan def
    /base arrowlength headlength sub def
                                                            
    /savematrix matrix currentmatrix def
    tailx taily translate
    angle rotate

    /Forward false def
    /Backward false def
    ArrowType 1 eq {/Forward  true def} if
    ArrowType 3 eq {/Forward  true def} if
    ArrowType 2 eq {/Backward true def} if
    ArrowType 3 eq {/Backward true def} if
    0 0 moveto

    Backward {
        headlength halfheadthickness neg lineto
        headlength halfthickness neg lineto
    } { 0 halfthickness neg lineto
    } ifelse

    Forward {
        base halfthickness neg lineto
        base halfheadthickness neg lineto
        arrowlength 0 lineto
        base halfheadthickness lineto
        base halfthickness lineto
    } { arrowlength halfthickness neg lineto
        arrowlength halfthickness lineto
    } ifelse

    Backward {
        headlength halfthickness lineto
        headlength halfheadthickness lineto
    } { 0 halfthickness lineto
    } ifelse

    closepath savematrix setmatrix end
} def
/arrow load 0 16 dict put

/Text {
    0 begin
    /text exch def
    /dy exch def /dx exch def
    /Y exch def /X exch def
    text stringwidth pop /W exch def
    /H FontSize def

    % center text
    /Y Y FontSize 2 div sub def
    /X X W 2 div sub def

    % adjust according to dx,dy
    /X X dx W mul 2 div sub def
    /Y Y dy H mul 2 div sub def

    gsave
	% determine bbox of text.
	newpath X Y moveto text true charpath pathbbox
	/st exch def /sr exch def /sb exch def /sl exch def

	% define a margin around bbox of text
	/Margin st sb sub 0.2 mul def
	/sb sb Margin sub def
	/sl sl Margin sub def
	/sr sr Margin add def
	/st st Margin add def

	% construct path corresponding to bbox
	newpath sl sb moveto sr sb lineto sr st lineto sl st lineto
	closepath

	% make it white.
	gsave 1 setgray fill grestore

	% stroke outline
	gsave 0 setlinewidth stroke grestore

    grestore

    % print text.
    X Y moveto text show

    end
} def
/Text load 0 20 dict put

/BeginLayout {
    /EPSLayGC save def
    /TForm exch def % TForm ==

    /bbxl TForm 4 get def
    /bbxr TForm 6 get def
    /bbyb TForm 5 get def
    /bbyt TForm 7 get def
    /Resolution TForm 8 get def

    % Rotate if necessary
    Rotate {
        /xl TForm 7 get neg def
        /xr TForm 5 get neg def
        /yb TForm 4 get def
        /yt TForm 6 get def

        TForm 4 xl put
        TForm 6 xr put
        TForm 5 yb put
        TForm 7 yt put
    } if % TForm ==

    /DrawWd TForm 2 get TForm 0 get sub def
    /DrawHt TForm 3 get TForm 1 get sub def

    /PicHt TForm 7 get TForm 5 get sub def
    /PicWd TForm 6 get TForm 4 get sub def   

    /WdScale DrawWd PicWd div def
    /HtScale DrawHt PicHt div def

    /ScaleFactor
        WdScale HtScale lt {WdScale} {HtScale} ifelse def

    % now move to center
    TForm 0 get DrawWd PicWd ScaleFactor mul sub 2 div add
    TForm 1 get DrawHt PicHt ScaleFactor mul sub 2 div add
    translate

    % Finally, perform scaling.  [(ScaleFactor) ScaleFactor] ==
    ScaleFactor ScaleFactor scale

    % but following items should not be scaled, so undo it.
    /Tailwd Tailwd ScaleFactor div def
    /Tipwd Tipwd ScaleFactor div def

    % Compute {min,max}fontsize and target fontsize in scaled coordinates.
    /MinFs MinFs ScaleFactor div def
    /MaxFs MaxFs ScaleFactor div def
    /FontSize LambdaFs Resolution mul def
    % [MinFs MaxFs FontSize] ==

    % Apply min and max, and set font
    FontSize MinFs lt {/FontSize MinFs def} if
    FontSize MaxFs gt {/FontSize MaxFs def} if
    FontName findfont FontSize scalefont setfont

    % set user origin
    TForm 4 get neg TForm 5 get neg translate
    Rotate {90 rotate} if
} def

/SetClipPath {
    newpath
    bbxl bbyb moveto
    bbxr bbyb lineto
    bbxr bbyt lineto
    bbxl bbyt lineto
    closepath
    clip
} def

/SetLayer {
    /Layer exch def
    gsave
    passnumber 1 eq {SetClipPath} if
    SetStyle clear newpath
    /pathLimitExceeded false def
} def

/EndLayer {
    pathCount 0 gt {DrawPolygons} if
    grestore
} def

/P {moveto /pathCount pathCount 1 add def} def

/T {lineto /pathCount pathCount 1 add def} def

/L {
    T closepath
    pathCount pathLimit gt {
	/pathLimitExceeded true def DrawPolygons
    } if
} def

/B {
    /dy exch def /dx exch def /yb exch def /xl exch def
    /xr xl dx add def
    /yt yb dy add def
    xl yb P xr yb T xr yt T xl yt L
} def

/R {
    /dy exch def /dx exch def /y0 exch def /x0 exch def
    x0 y0 P dx 0 rlineto 0 dy rlineto
    /pathCount pathCount 2 add def
} def

/X {
    exch 0 rlineto 0 exch rlineto
    /pathCount pathCount 2 add def
} def

/C {
    exch 0 rlineto 0 exch rlineto
    % [(current) currentpoint (x0) x0 (y0) y0 ] ==
    x0 currentpoint pop sub 0 rlineto
    closepath
    /pathCount pathCount 4 add def
    pathCount pathLimit gt {
	/pathLimitExceeded true def DrawPolygons
    } if
} def

/EndLayout {
    EndLayer showpage
    % EPSLayDict length =
    EPSLayGC restore
    end
} def

/DrawPolygons {
    % pathLimitExceeded { [(pathLimitExceeded) pathCount Layer] == } if
    passnumber 1 eq {
	pathLimitExceeded false eq bigPathFill true eq or {
	    gsave FillPolygons grestore
	} if
    } if
    % Always stroke polygon boundaries, because a mask
    % might be skipped in pass 2.
    OutlinePolygons 
    /pathCount 0 def
} def

/FillPolygons {FillPattern setpattern fill} def

/OutlinePolygons {
    /bwidth 1    def
    /bpside 8    def
    <ffffffffffffffff> setpattern
    LineWd setlinewidth
    0 setgray
    stroke
} def

/SetStyle {
    Style Layer get aload pop
    /LineWd exch Resolution mul def % in lambda's
    /Pfreq exch def
    aload pop
    /FillPattern exch def
    /bpside exch def
    /bwidth exch def
    /freq 300 bpside div Pfreq div Bfreq div def
    % [(bpside, bwidth, freq) bpside bwidth freq (FillPattern) FillPattern]==
} def

/plotArrow {
    /ArrowType exch def
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 x2 y2 Tailwd Tipwd Tipwd 2 mul ArrowType arrow
    fill
} def

/align false def
/termTextAlignment {
    aload pop
    /ady exch def
    /adx exch def
    /align true def
} def

/plotTerminal {
    /name exch def
    /dy exch def /dx exch def
    /yt exch def /yb exch def /xr exch def /xl exch def
    passnumber 2 eq {
	LineWd setlinewidth
	newpath
	xl yb moveto xr yb lineto xr yt lineto xl yt lineto
	closepath stroke
	newpath xl yb moveto xr yt lineto stroke
	newpath xr yb moveto xl yt lineto stroke
    } if
    passnumber 3 eq {
	align true eq {/dx adx def /dy ady def} if
        xl xr add 2 div yb yt add 2 div dx dy name Text
    } if
} def

/PlotBBox {
    passnumber 2 eq {
	1 setlinewidth newpath
	bbxl bbyb moveto
	bbxr bbyb lineto
	bbxr bbyt lineto
	bbxl bbyt lineto
	closepath stroke
    } if
} def

/defineStyle {
    /stylearg exch def
    Style stylearg 0 get stylearg 1 3 getinterval put
} def


[5 14 15 /Helvetica-Bold] plotFont
[-1 1] termTextAlignment

[ (bb)     white    1.0    0.1 ] defineStyle
[ (nw)     white    1.0    0.1 ] defineStyle
[ (sp)     white    1.0    0.1 ] defineStyle
[ (sn)     white    1.0    0.1 ] defineStyle
[ (od)     p6       1.0    0.1 ] defineStyle
[ (od)     dots2    1.0    0.1 ] defineStyle
[ (ps)     dots6    1.0    0.1 ] defineStyle
[ (in)     dots12   1.0    0.1 ] defineStyle
[ (con)    black    1.0    0.1 ] defineStyle
[ (cop)    black    1.0    0.1 ] defineStyle
[ (cps)    black    1.0    0.1 ] defineStyle
[ (ins)    dots25   1.0    0.1 ] defineStyle
[ (cos)    fcross45 1.0    2.0 ] defineStyle
[ (cb)     white    1.0    4.0 ] defineStyle
[ (t_od)   p6       1.0    0.1 ] defineStyle
[ (t_ps)   p18      1.0    0.1 ] defineStyle
[ (t_in)   p16      1.0    0.1 ] defineStyle
[ (t_ins)  p15      1.0    0.1 ] defineStyle
[165 29 430 808 0 -40 1416 4128 4] BeginLayout
1 plotPass
(od) SetLayer
96 0 1224 136 B
96 344 1224 464 B
96 1176 1224 592 B
96 2320 1224 592 B
96 3280 1224 464 B
96 3952 1224 136 B
96 1976 1232 136 B
EndLayer
(ps) SetLayer
272 838 P
216 894 T
216 968 T
136 968 T
136 888 T
176 888 T
240 824 T
240 328 T
222 310 T
176 264 T
136 264 T
136 184 T
216 184 T
216 254 T
272 310 L
272 1798 P
216 1854 T
216 1928 T
136 1928 T
136 1848 T
176 1848 T
240 1784 T
240 1160 T
222 1142 T
176 1096 T
136 1096 T
136 1016 T
216 1016 T
216 1086 T
272 1142 L
272 2946 P
216 3002 T
216 3072 T
136 3072 T
136 2992 T
176 2992 T
240 2928 T
240 2304 T
226 2290 T
176 2240 T
136 2240 T
136 2160 T
216 2160 T
216 2234 T
272 2290 L
272 3778 P
216 3834 T
216 3904 T
136 3904 T
136 3824 T
176 3824 T
240 3760 T
240 3264 T
226 3250 T
176 3200 T
136 3200 T
136 3120 T
216 3120 T
216 3194 T
272 3250 L
432 838 P
376 894 T
376 968 T
296 968 T
296 888 T
336 888 T
400 824 T
400 328 T
382 310 T
336 264 T
296 264 T
296 184 T
376 184 T
376 254 T
432 310 L
432 1798 P
376 1854 T
376 1928 T
296 1928 T
296 1848 T
336 1848 T
400 1784 T
400 1160 T
382 1142 T
336 1096 T
296 1096 T
296 1016 T
376 1016 T
376 1086 T
432 1142 L
432 2946 P
376 3002 T
376 3072 T
296 3072 T
296 2992 T
336 2992 T
400 2928 T
400 2304 T
386 2290 T
336 2240 T
296 2240 T
296 2160 T
376 2160 T
376 2234 T
432 2290 L
432 3778 P
376 3834 T
376 3904 T
296 3904 T
296 3824 T
336 3824 T
400 3760 T
400 3264 T
386 3250 T
336 3200 T
296 3200 T
296 3120 T
376 3120 T
376 3194 T
432 3250 L
592 838 P
536 894 T
536 968 T
456 968 T
456 888 T
496 888 T
560 824 T
560 328 T
542 310 T
496 264 T
456 264 T
456 184 T
536 184 T
536 254 T
592 310 L
592 1798 P
536 1854 T
536 1928 T
456 1928 T
456 1848 T
496 1848 T
560 1784 T
560 1160 T
542 1142 T
496 1096 T
456 1096 T
456 1016 T
536 1016 T
536 1086 T
592 1142 L
592 2946 P
536 3002 T
536 3072 T
456 3072 T
456 2992 T
496 2992 T
560 2928 T
560 2304 T
546 2290 T
496 2240 T
456 2240 T
456 2160 T
536 2160 T
536 2234 T
592 2290 L
592 3778 P
536 3834 T
536 3904 T
456 3904 T
456 3824 T
496 3824 T
560 3760 T
560 3264 T
546 3250 T
496 3200 T
456 3200 T
456 3120 T
536 3120 T
536 3194 T
592 3250 L
752 838 P
696 894 T
696 968 T
616 968 T
616 888 T
656 888 T
720 824 T
720 328 T
702 310 T
656 264 T
616 264 T
616 184 T
696 184 T
696 254 T
752 310 L
752 1798 P
696 1854 T
696 1928 T
616 1928 T
616 1848 T
656 1848 T
720 1784 T
720 1160 T
702 1142 T
656 1096 T
616 1096 T
616 1016 T
696 1016 T
696 1086 T
752 1142 L
752 2946 P
696 3002 T
696 3072 T
616 3072 T
616 2992 T
656 2992 T
720 2928 T
720 2304 T
706 2290 T
656 2240 T
616 2240 T
616 2160 T
696 2160 T
696 2234 T
752 2290 L
752 3778 P
696 3834 T
696 3904 T
616 3904 T
616 3824 T
656 3824 T
720 3760 T
720 3264 T
706 3250 T
656 3200 T
616 3200 T
616 3120 T
696 3120 T
696 3194 T
752 3250 L
912 838 P
856 894 T
856 968 T
776 968 T
776 888 T
816 888 T
880 824 T
880 328 T
862 310 T
816 264 T
776 264 T
776 184 T
856 184 T
856 254 T
912 310 L
912 1798 P
856 1854 T
856 1928 T
776 1928 T
776 1848 T
816 1848 T
880 1784 T
880 1160 T
862 1142 T
816 1096 T
776 1096 T
776 1016 T
856 1016 T
856 1086 T
912 1142 L
912 2946 P
856 3002 T
856 3072 T
776 3072 T
776 2992 T
816 2992 T
880 2928 T
880 2304 T
866 2290 T
816 2240 T
776 2240 T
776 2160 T
856 2160 T
856 2234 T
912 2290 L
912 3778 P
856 3834 T
856 3904 T
776 3904 T
776 3824 T
816 3824 T
880 3760 T
880 3264 T
866 3250 T
816 3200 T
776 3200 T
776 3120 T
856 3120 T
856 3194 T
912 3250 L
1072 838 P
1016 894 T
1016 968 T
936 968 T
936 888 T
976 888 T
1040 824 T
1040 328 T
1022 310 T
976 264 T
936 264 T
936 184 T
1016 184 T
1016 254 T
1072 310 L
1072 1798 P
1016 1854 T
1016 1928 T
936 1928 T
936 1848 T
976 1848 T
1040 1784 T
1040 1160 T
1022 1142 T
976 1096 T
936 1096 T
936 1016 T
1016 1016 T
1016 1086 T
1072 1142 L
1072 2946 P
1016 3002 T
1016 3072 T
936 3072 T
936 2992 T
976 2992 T
1040 2928 T
1040 2304 T
1026 2290 T
976 2240 T
936 2240 T
936 2160 T
1016 2160 T
1016 2234 T
1072 2290 L
1072 3778 P
1016 3834 T
1016 3904 T
936 3904 T
936 3824 T
976 3824 T
1040 3760 T
1040 3264 T
1026 3250 T
976 3200 T
936 3200 T
936 3120 T
1016 3120 T
1016 3194 T
1072 3250 L
1232 838 P
1176 894 T
1176 968 T
1096 968 T
1096 888 T
1136 888 T
1200 824 T
1200 328 T
1182 310 T
1136 264 T
1096 264 T
1096 184 T
1176 184 T
1176 254 T
1232 310 L
1232 1798 P
1176 1854 T
1176 1928 T
1096 1928 T
1096 1848 T
1136 1848 T
1200 1784 T
1200 1160 T
1182 1142 T
1136 1096 T
1096 1096 T
1096 1016 T
1176 1016 T
1176 1086 T
1232 1142 L
1232 2946 P
1176 3002 T
1176 3072 T
1096 3072 T
1096 2992 T
1136 2992 T
1200 2928 T
1200 2304 T
1186 2290 T
1136 2240 T
1096 2240 T
1096 2160 T
1176 2160 T
1176 2234 T
1232 2290 L
1232 3778 P
1176 3834 T
1176 3904 T
1096 3904 T
1096 3824 T
1136 3824 T
1200 3760 T
1200 3264 T
1186 3250 T
1136 3200 T
1096 3200 T
1096 3120 T
1176 3120 T
1176 3194 T
1232 3250 L
EndLayer
(in) SetLayer
216 1384 -80 -80 R
16 -48 X
-16 -80 X
80 80 X
-16 48 C
216 3488 -80 -80 R
16 -48 X
-16 -80 X
80 80 X
-16 48 C
376 1256 -80 -80 R
16 -80 X
-16 -16 X
-80 16 X
-80 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 16 X
80 -16 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 80 X
-16 80 C
536 2784 -80 -16 R
-240 16 X
-16 48 X
16 80 X
-80 -80 X
16 -48 X
-16 -80 X
80 16 X
240 -16 C
536 3200 -80 -80 R
16 -48 X
-16 -80 X
16 -96 X
-96 16 X
-80 -80 X
80 16 X
144 144 X
16 80 X
-16 48 C
696 1256 -80 -80 R
16 -384 X
-96 16 X
-80 -80 X
80 16 X
144 432 C
696 2912 -16 432 R
-144 16 X
-80 -80 X
80 16 X
96 -384 X
-16 -80 C
856 1256 -80 -80 R
16 -80 X
-16 -80 X
16 -48 X
-16 -80 X
16 -224 X
-576 16 X
-16 48 X
16 80 X
-80 -80 X
16 -48 X
-16 -80 X
80 16 X
624 272 X
16 80 X
-16 48 X
16 80 X
-16 80 C
856 3200 -16 272 R
-528 -272 X
-16 -16 X
-80 16 X
-80 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 16 X
80 -16 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 80 X
-16 224 X
432 -224 X
-16 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 C
1016 1096 -16 272 R
-464 16 X
-80 -80 X
16 -208 X
-16 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 80 X
-16 208 X
16 16 X
416 -224 X
-16 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 C
1016 3200 -80 -80 R
16 -48 X
-16 -80 X
16 -96 X
-96 16 X
-80 -80 X
80 16 X
144 144 X
16 80 X
-16 48 C
1176 1256 -80 -80 R
16 -384 X
-96 16 X
-80 -80 X
80 16 X
144 432 C
1176 2912 -16 432 R
-144 16 X
-80 -80 X
80 16 X
96 -384 X
-16 -80 C
1320 136 -160 48 R
16 80 X
-16 80 X
16 80 X
-80 -80 X
16 -80 X
-16 -80 X
16 -48 X
-272 208 X
16 80 X
-80 -80 X
16 -208 X
-112 48 X
16 80 X
-16 80 X
16 80 X
-80 -80 X
16 -80 X
-16 -80 X
16 -48 X
-272 208 X
16 80 X
-80 -80 X
16 -208 X
-216 -136 C
1320 4088 -1224 -136 R
216 -208 X
-16 -80 X
80 80 X
-16 208 X
272 -48 X
-16 -80 X
16 -80 X
-16 -80 X
80 80 X
-16 80 X
16 80 X
-16 48 X
112 -208 X
-16 -80 X
80 80 X
-16 208 X
272 -48 X
-16 -80 X
16 -80 X
-16 -80 X
80 80 X
-16 80 X
16 80 X
-16 48 C
1328 2112 -168 48 R
16 80 X
-80 -80 X
16 -48 X
-272 208 X
16 80 X
-80 -80 X
16 -208 X
-112 48 X
16 80 X
-80 -80 X
16 -48 X
-272 208 X
16 80 X
-80 -80 X
16 -208 X
-216 -136 X
216 -208 X
-16 -80 X
80 80 X
-16 208 X
272 -48 X
-16 -80 X
80 80 X
-16 48 X
112 -208 X
-16 -80 X
80 80 X
-16 208 X
272 -48 X
-16 -80 X
80 80 X
-16 48 C
EndLayer
(ins) SetLayer
216 1256 -80 -80 R
16 -368 X
-16 -80 X
80 80 X
-16 368 C
216 3360 -80 -80 R
16 -368 X
-16 -80 X
80 80 X
-16 368 C
376 2912 -80 -80 R
16 -1576 X
-16 -80 X
80 80 X
-16 1576 C
536 2784 -80 -80 R
16 -1320 X
-16 -80 X
80 80 X
-16 1320 C
856 2912 -80 -80 R
16 -1576 X
-16 -80 X
80 80 X
-16 1576 C
EndLayer
(con) SetLayer
156 620 40 40 B
156 3428 40 40 B
316 364 40 40 B
316 3684 40 40 B
476 748 40 40 B
476 3300 40 40 B
636 364 40 40 B
636 3684 40 40 B
796 364 40 40 B
796 3684 40 40 B
956 748 40 40 B
956 3300 40 40 B
1116 364 40 40 B
1116 3684 40 40 B
EndLayer
(cop) SetLayer
156 1324 40 40 B
156 2724 40 40 B
316 1708 40 40 B
316 2340 40 40 B
636 1196 40 40 B
636 2852 40 40 B
796 1708 40 40 B
796 2340 40 40 B
1116 1196 40 40 B
1116 2852 40 40 B
EndLayer
(cos) SetLayer
156 748 40 40 B
156 1196 40 40 B
156 2852 40 40 B
156 3300 40 40 B
316 1196 40 40 B
316 2852 40 40 B
476 1324 40 40 B
476 2724 40 40 B
796 1196 40 40 B
796 2852 40 40 B
EndLayer
(cps) SetLayer
156 908 40 40 B
156 1036 40 40 B
156 3012 40 40 B
156 3140 40 40 B
316 908 40 40 B
316 1036 40 40 B
316 3012 40 40 B
316 3140 40 40 B
476 908 40 40 B
476 1036 40 40 B
476 3012 40 40 B
476 3140 40 40 B
636 204 40 40 B
636 1868 40 40 B
636 2180 40 40 B
636 3844 40 40 B
796 908 40 40 B
796 1036 40 40 B
796 3012 40 40 B
796 3140 40 40 B
956 908 40 40 B
956 1036 40 40 B
956 3012 40 40 B
956 3140 40 40 B
1116 204 40 40 B
1116 1868 40 40 B
1116 2180 40 40 B
1116 3844 40 40 B
EndLayer
(cb) SetLayer
EndLayer
2 plotPass
(od) SetLayer
96 0 1224 136 B
96 344 1224 464 B
96 1176 1224 592 B
96 2320 1224 592 B
96 3280 1224 464 B
96 3952 1224 136 B
96 1976 1232 136 B
EndLayer
(t_od) SetLayer
EndLayer
(ps) SetLayer
272 838 P
216 894 T
216 968 T
136 968 T
136 888 T
176 888 T
240 824 T
240 328 T
222 310 T
176 264 T
136 264 T
136 184 T
216 184 T
216 254 T
272 310 L
272 1798 P
216 1854 T
216 1928 T
136 1928 T
136 1848 T
176 1848 T
240 1784 T
240 1160 T
222 1142 T
176 1096 T
136 1096 T
136 1016 T
216 1016 T
216 1086 T
272 1142 L
272 2946 P
216 3002 T
216 3072 T
136 3072 T
136 2992 T
176 2992 T
240 2928 T
240 2304 T
226 2290 T
176 2240 T
136 2240 T
136 2160 T
216 2160 T
216 2234 T
272 2290 L
272 3778 P
216 3834 T
216 3904 T
136 3904 T
136 3824 T
176 3824 T
240 3760 T
240 3264 T
226 3250 T
176 3200 T
136 3200 T
136 3120 T
216 3120 T
216 3194 T
272 3250 L
432 838 P
376 894 T
376 968 T
296 968 T
296 888 T
336 888 T
400 824 T
400 328 T
382 310 T
336 264 T
296 264 T
296 184 T
376 184 T
376 254 T
432 310 L
432 1798 P
376 1854 T
376 1928 T
296 1928 T
296 1848 T
336 1848 T
400 1784 T
400 1160 T
382 1142 T
336 1096 T
296 1096 T
296 1016 T
376 1016 T
376 1086 T
432 1142 L
432 2946 P
376 3002 T
376 3072 T
296 3072 T
296 2992 T
336 2992 T
400 2928 T
400 2304 T
386 2290 T
336 2240 T
296 2240 T
296 2160 T
376 2160 T
376 2234 T
432 2290 L
432 3778 P
376 3834 T
376 3904 T
296 3904 T
296 3824 T
336 3824 T
400 3760 T
400 3264 T
386 3250 T
336 3200 T
296 3200 T
296 3120 T
376 3120 T
376 3194 T
432 3250 L
592 838 P
536 894 T
536 968 T
456 968 T
456 888 T
496 888 T
560 824 T
560 328 T
542 310 T
496 264 T
456 264 T
456 184 T
536 184 T
536 254 T
592 310 L
592 1798 P
536 1854 T
536 1928 T
456 1928 T
456 1848 T
496 1848 T
560 1784 T
560 1160 T
542 1142 T
496 1096 T
456 1096 T
456 1016 T
536 1016 T
536 1086 T
592 1142 L
592 2946 P
536 3002 T
536 3072 T
456 3072 T
456 2992 T
496 2992 T
560 2928 T
560 2304 T
546 2290 T
496 2240 T
456 2240 T
456 2160 T
536 2160 T
536 2234 T
592 2290 L
592 3778 P
536 3834 T
536 3904 T
456 3904 T
456 3824 T
496 3824 T
560 3760 T
560 3264 T
546 3250 T
496 3200 T
456 3200 T
456 3120 T
536 3120 T
536 3194 T
592 3250 L
752 838 P
696 894 T
696 968 T
616 968 T
616 888 T
656 888 T
720 824 T
720 328 T
702 310 T
656 264 T
616 264 T
616 184 T
696 184 T
696 254 T
752 310 L
752 1798 P
696 1854 T
696 1928 T
616 1928 T
616 1848 T
656 1848 T
720 1784 T
720 1160 T
702 1142 T
656 1096 T
616 1096 T
616 1016 T
696 1016 T
696 1086 T
752 1142 L
752 2946 P
696 3002 T
696 3072 T
616 3072 T
616 2992 T
656 2992 T
720 2928 T
720 2304 T
706 2290 T
656 2240 T
616 2240 T
616 2160 T
696 2160 T
696 2234 T
752 2290 L
752 3778 P
696 3834 T
696 3904 T
616 3904 T
616 3824 T
656 3824 T
720 3760 T
720 3264 T
706 3250 T
656 3200 T
616 3200 T
616 3120 T
696 3120 T
696 3194 T
752 3250 L
912 838 P
856 894 T
856 968 T
776 968 T
776 888 T
816 888 T
880 824 T
880 328 T
862 310 T
816 264 T
776 264 T
776 184 T
856 184 T
856 254 T
912 310 L
912 1798 P
856 1854 T
856 1928 T
776 1928 T
776 1848 T
816 1848 T
880 1784 T
880 1160 T
862 1142 T
816 1096 T
776 1096 T
776 1016 T
856 1016 T
856 1086 T
912 1142 L
912 2946 P
856 3002 T
856 3072 T
776 3072 T
776 2992 T
816 2992 T
880 2928 T
880 2304 T
866 2290 T
816 2240 T
776 2240 T
776 2160 T
856 2160 T
856 2234 T
912 2290 L
912 3778 P
856 3834 T
856 3904 T
776 3904 T
776 3824 T
816 3824 T
880 3760 T
880 3264 T
866 3250 T
816 3200 T
776 3200 T
776 3120 T
856 3120 T
856 3194 T
912 3250 L
1072 838 P
1016 894 T
1016 968 T
936 968 T
936 888 T
976 888 T
1040 824 T
1040 328 T
1022 310 T
976 264 T
936 264 T
936 184 T
1016 184 T
1016 254 T
1072 310 L
1072 1798 P
1016 1854 T
1016 1928 T
936 1928 T
936 1848 T
976 1848 T
1040 1784 T
1040 1160 T
1022 1142 T
976 1096 T
936 1096 T
936 1016 T
1016 1016 T
1016 1086 T
1072 1142 L
1072 2946 P
1016 3002 T
1016 3072 T
936 3072 T
936 2992 T
976 2992 T
1040 2928 T
1040 2304 T
1026 2290 T
976 2240 T
936 2240 T
936 2160 T
1016 2160 T
1016 2234 T
1072 2290 L
1072 3778 P
1016 3834 T
1016 3904 T
936 3904 T
936 3824 T
976 3824 T
1040 3760 T
1040 3264 T
1026 3250 T
976 3200 T
936 3200 T
936 3120 T
1016 3120 T
1016 3194 T
1072 3250 L
1232 838 P
1176 894 T
1176 968 T
1096 968 T
1096 888 T
1136 888 T
1200 824 T
1200 328 T
1182 310 T
1136 264 T
1096 264 T
1096 184 T
1176 184 T
1176 254 T
1232 310 L
1232 1798 P
1176 1854 T
1176 1928 T
1096 1928 T
1096 1848 T
1136 1848 T
1200 1784 T
1200 1160 T
1182 1142 T
1136 1096 T
1096 1096 T
1096 1016 T
1176 1016 T
1176 1086 T
1232 1142 L
1232 2946 P
1176 3002 T
1176 3072 T
1096 3072 T
1096 2992 T
1136 2992 T
1200 2928 T
1200 2304 T
1186 2290 T
1136 2240 T
1096 2240 T
1096 2160 T
1176 2160 T
1176 2234 T
1232 2290 L
1232 3778 P
1176 3834 T
1176 3904 T
1096 3904 T
1096 3824 T
1136 3824 T
1200 3760 T
1200 3264 T
1186 3250 T
1136 3200 T
1096 3200 T
1096 3120 T
1176 3120 T
1176 3194 T
1232 3250 L
EndLayer
(t_ps) SetLayer
EndLayer
(in) SetLayer
216 1384 -80 -80 R
16 -48 X
-16 -80 X
80 80 X
-16 48 C
216 3488 -80 -80 R
16 -48 X
-16 -80 X
80 80 X
-16 48 C
376 1256 -80 -80 R
16 -80 X
-16 -16 X
-80 16 X
-80 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 16 X
80 -16 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 80 X
-16 80 C
536 2784 -80 -16 R
-240 16 X
-16 48 X
16 80 X
-80 -80 X
16 -48 X
-16 -80 X
80 16 X
240 -16 C
536 3200 -80 -80 R
16 -48 X
-16 -80 X
16 -96 X
-96 16 X
-80 -80 X
80 16 X
144 144 X
16 80 X
-16 48 C
696 1256 -80 -80 R
16 -384 X
-96 16 X
-80 -80 X
80 16 X
144 432 C
696 2912 -16 432 R
-144 16 X
-80 -80 X
80 16 X
96 -384 X
-16 -80 C
856 1256 -80 -80 R
16 -80 X
-16 -80 X
16 -48 X
-16 -80 X
16 -224 X
-576 16 X
-16 48 X
16 80 X
-80 -80 X
16 -48 X
-16 -80 X
80 16 X
624 272 X
16 80 X
-16 48 X
16 80 X
-16 80 C
856 3200 -16 272 R
-528 -272 X
-16 -16 X
-80 16 X
-80 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 16 X
80 -16 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 80 X
-16 224 X
432 -224 X
-16 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 C
1016 1096 -16 272 R
-464 16 X
-80 -80 X
16 -208 X
-16 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 X
16 80 X
-16 208 X
16 16 X
416 -224 X
-16 -80 X
16 -48 X
-16 -80 X
80 80 X
-16 48 C
1016 3200 -80 -80 R
16 -48 X
-16 -80 X
16 -96 X
-96 16 X
-80 -80 X
80 16 X
144 144 X
16 80 X
-16 48 C
1176 1256 -80 -80 R
16 -384 X
-96 16 X
-80 -80 X
80 16 X
144 432 C
1176 2912 -16 432 R
-144 16 X
-80 -80 X
80 16 X
96 -384 X
-16 -80 C
1320 136 -160 48 R
16 80 X
-16 80 X
16 80 X
-80 -80 X
16 -80 X
-16 -80 X
16 -48 X
-272 208 X
16 80 X
-80 -80 X
16 -208 X
-112 48 X
16 80 X
-16 80 X
16 80 X
-80 -80 X
16 -80 X
-16 -80 X
16 -48 X
-272 208 X
16 80 X
-80 -80 X
16 -208 X
-216 -136 C
1320 4088 -1224 -136 R
216 -208 X
-16 -80 X
80 80 X
-16 208 X
272 -48 X
-16 -80 X
16 -80 X
-16 -80 X
80 80 X
-16 80 X
16 80 X
-16 48 X
112 -208 X
-16 -80 X
80 80 X
-16 208 X
272 -48 X
-16 -80 X
16 -80 X
-16 -80 X
80 80 X
-16 80 X
16 80 X
-16 48 C
1328 2112 -168 48 R
16 80 X
-80 -80 X
16 -48 X
-272 208 X
16 80 X
-80 -80 X
16 -208 X
-112 48 X
16 80 X
-80 -80 X
16 -48 X
-272 208 X
16 80 X
-80 -80 X
16 -208 X
-216 -136 X
216 -208 X
-16 -80 X
80 80 X
-16 208 X
272 -48 X
-16 -80 X
80 80 X
-16 48 X
112 -208 X
-16 -80 X
80 80 X
-16 208 X
272 -48 X
-16 -80 X
80 80 X
-16 48 C
EndLayer
(t_in) SetLayer
1112 1160 1032 1080 0 0 (Y3) plotTerminal
632 680 1032 1080 0 0 (Y2) plotTerminal
1112 1160 3136 3184 0 0 (Y1) plotTerminal
632 680 3136 3184 0 0 (Y0) plotTerminal
312 360 3136 3184 0 0 (B) plotTerminal
312 360 1032 1080 0 0 (A) plotTerminal
152 200 3996 4044 0 0 (vss_2) plotTerminal
152 200 44 92 0 0 (vss_1) plotTerminal
152 200 2020 2068 0 0 (vdd) plotTerminal
EndLayer
(ins) SetLayer
216 1256 -80 -80 R
16 -368 X
-16 -80 X
80 80 X
-16 368 C
216 3360 -80 -80 R
16 -368 X
-16 -80 X
80 80 X
-16 368 C
376 2912 -80 -80 R
16 -1576 X
-16 -80 X
80 80 X
-16 1576 C
536 2784 -80 -80 R
16 -1320 X
-16 -80 X
80 80 X
-16 1320 C
856 2912 -80 -80 R
16 -1576 X
-16 -80 X
80 80 X
-16 1576 C
EndLayer
(t_ins) SetLayer
EndLayer
3 plotPass
(t_od) SetLayer
EndLayer
(t_ps) SetLayer
EndLayer
(t_in) SetLayer
1112 1160 1032 1080 0 0 (Y3) plotTerminal
632 680 1032 1080 0 0 (Y2) plotTerminal
1112 1160 3136 3184 0 0 (Y1) plotTerminal
632 680 3136 3184 0 0 (Y0) plotTerminal
312 360 3136 3184 0 0 (B) plotTerminal
312 360 1032 1080 0 0 (A) plotTerminal
152 200 3996 4044 0 0 (vss_2) plotTerminal
152 200 44 92 0 0 (vss_1) plotTerminal
152 200 2020 2068 0 0 (vdd) plotTerminal
EndLayer
(t_ins) SetLayer
EndLayer
EndLayout
%%EndDocument
 992 1193 a
 endTexFig
960 3625 a Fb(2)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
